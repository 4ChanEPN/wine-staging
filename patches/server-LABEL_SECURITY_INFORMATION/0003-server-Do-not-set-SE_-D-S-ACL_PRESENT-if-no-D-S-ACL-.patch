From 048c4e74b36eacac239ab61997f756ed956ab7f2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Tue, 30 Aug 2016 02:10:32 +0200
Subject: server: Do not set SE_{D,S}ACL_PRESENT if no {D,S}ACL was set.

---
 dlls/advapi32/tests/security.c |  6 +++---
 server/handle.c                |  2 --
 server/object.c                | 15 +++++++++++++--
 3 files changed, 16 insertions(+), 7 deletions(-)

diff --git a/dlls/advapi32/tests/security.c b/dlls/advapi32/tests/security.c
index 84a451eb834..263d2f11544 100644
--- a/dlls/advapi32/tests/security.c
+++ b/dlls/advapi32/tests/security.c
@@ -6476,9 +6476,9 @@ static void test_integrity(void)
     defaulted = TRUE;
     ret = GetSecurityDescriptorSacl(sd2, &present, &sAcl, &defaulted);
     ok(ret, "GetSecurityDescriptorSacl failed with %u\n", GetLastError());
-    todo_wine ok(!present, "sAcl is present\n");
-    todo_wine ok(sAcl == (void *)0xdeadbeef, "sAcl is set\n");
-    ok(!defaulted, "sAcl defaulted\n");
+    ok(!present, "sAcl is present\n");
+    ok(sAcl == (void *)0xdeadbeef, "sAcl is set\n");
+    todo_wine ok(!defaulted, "sAcl defaulted\n");
 
     HeapFree(GetProcessHeap(), 0, sd2);
     CloseHandle(handle);
diff --git a/server/handle.c b/server/handle.c
index a0e27b9507e..57e0c060e03 100644
--- a/server/handle.c
+++ b/server/handle.c
@@ -916,7 +916,6 @@ DECL_HANDLER(get_security_object)
         else
             req_sd.group_len = 0;
 
-        req_sd.control |= SE_SACL_PRESENT;
         sacl = sd_get_sacl( sd, &present );
         if (req->security_info & SACL_SECURITY_INFORMATION && present)
             req_sd.sacl_len = sd->sacl_len;
@@ -929,7 +928,6 @@ DECL_HANDLER(get_security_object)
         else
             req_sd.sacl_len = 0;
 
-        req_sd.control |= SE_DACL_PRESENT;
         dacl = sd_get_dacl( sd, &present );
         if (req->security_info & DACL_SECURITY_INFORMATION && present)
             req_sd.dacl_len = sd->dacl_len;
diff --git a/server/object.c b/server/object.c
index b4af10e811c..703875db248 100644
--- a/server/object.c
+++ b/server/object.c
@@ -573,33 +573,44 @@ struct security_descriptor *set_sd_from_token_internal( const struct security_de
     }
     else new_sd.group_len = 0;
 
-    new_sd.control |= SE_SACL_PRESENT;
     sacl = sd_get_sacl( sd, &present );
     if (set_info & SACL_SECURITY_INFORMATION && present)
+    {
+        new_sd.control |= SE_SACL_PRESENT;
         new_sd.sacl_len = sd->sacl_len;
+    }
     else
     {
         if (old_sd) sacl = sd_get_sacl( old_sd, &present );
 
         if (old_sd && present)
+        {
+            new_sd.control |= SE_SACL_PRESENT;
             new_sd.sacl_len = old_sd->sacl_len;
+        }
         else
             new_sd.sacl_len = 0;
     }
 
-    new_sd.control |= SE_DACL_PRESENT;
     dacl = sd_get_dacl( sd, &present );
     if (set_info & DACL_SECURITY_INFORMATION && present)
+    {
+        new_sd.control |= SE_DACL_PRESENT;
         new_sd.dacl_len = sd->dacl_len;
+    }
     else
     {
         if (old_sd) dacl = sd_get_dacl( old_sd, &present );
 
         if (old_sd && present)
+        {
+            new_sd.control |= SE_DACL_PRESENT;
             new_sd.dacl_len = old_sd->dacl_len;
+        }
         else if (token)
         {
             dacl = token_get_default_dacl( token );
+            new_sd.control |= SE_DACL_PRESENT;
             new_sd.dacl_len = dacl->AclSize;
         }
         else new_sd.dacl_len = 0;
-- 
2.11.0

