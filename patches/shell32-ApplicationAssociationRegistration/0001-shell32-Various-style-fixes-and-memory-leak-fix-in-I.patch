From 1fc8601b891e8dee2ff65d84f5459ede605e2a57 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Wed, 18 Feb 2015 20:02:38 +0100
Subject: shell32: Various style fixes and memory leak fix in
 IApplicationAssociationRegistration.

---
 dlls/shell32/assoc.c       | 46 ++++++++++++++++++++++++++++------------------
 dlls/shell32/tests/assoc.c |  7 +++----
 2 files changed, 31 insertions(+), 22 deletions(-)

diff --git a/dlls/shell32/assoc.c b/dlls/shell32/assoc.c
index 528666e..e79eeae 100644
--- a/dlls/shell32/assoc.c
+++ b/dlls/shell32/assoc.c
@@ -892,30 +892,33 @@ static HRESULT WINAPI ApplicationAssociationRegistration_QueryCurrentDefault(IAp
 
     TRACE("(%p)->(%s, %d, %d, %p)\n", This, debugstr_w(query), type, level, association);
 
-    if(!association)
+    if (!query || !association)
         return E_INVALIDARG;
 
     *association = NULL;
 
-    if((type == AT_URLPROTOCOL || type == AT_FILEEXTENSION) && !lstrlenW(query))
-        return E_INVALIDARG;
-    else if(type == AT_FILEEXTENSION && query[0] != '.')
-        return E_INVALIDARG;
-
-    if(type == AT_FILEEXTENSION)
+    if (type == AT_FILEEXTENSION)
     {
+        if (query[0] != '.')
+            return E_INVALIDARG;
+
         ret = RegOpenKeyExW(HKEY_CLASSES_ROOT, query, 0, KEY_READ, &hkey);
-        if(ret == ERROR_SUCCESS)
+        if (ret == ERROR_SUCCESS)
         {
             ret = RegGetValueW(hkey, NULL, NULL, RRF_RT_REG_SZ, &keytype, NULL, &size);
-            if(ret == ERROR_SUCCESS)
+            if (ret == ERROR_SUCCESS)
             {
                 *association = CoTaskMemAlloc(size);
-                if(*association)
+                if (*association)
                 {
                     ret = RegGetValueW(hkey, NULL, NULL, RRF_RT_REG_SZ, &keytype, *association, &size);
-                    if(ret == ERROR_SUCCESS)
+                    if (ret == ERROR_SUCCESS)
                         hr = S_OK;
+                    else
+                    {
+                        CoTaskMemFree(*association);
+                        *association = NULL;
+                    }
                 }
                 else
                     hr = E_OUTOFMEMORY;
@@ -924,12 +927,15 @@ static HRESULT WINAPI ApplicationAssociationRegistration_QueryCurrentDefault(IAp
     }
     else
     {
+        if (type == AT_URLPROTOCOL && !query[0])
+            return E_INVALIDARG;
+
         ret = RegOpenKeyExW(HKEY_CURRENT_USER, assocations, 0, KEY_READ, &hkey);
-        if(ret == ERROR_SUCCESS)
+        if (ret == ERROR_SUCCESS)
         {
-            if(type == AT_URLPROTOCOL)
+            if (type == AT_URLPROTOCOL)
                 lstrcpyW(path, urlassoc);
-            else if(type == AT_MIMETYPE)
+            else if (type == AT_MIMETYPE)
                 lstrcpyW(path, mimeassoc);
             else
             {
@@ -944,14 +950,19 @@ static HRESULT WINAPI ApplicationAssociationRegistration_QueryCurrentDefault(IAp
             lstrcatW(path, choice);
 
             ret = RegGetValueW(hkey, path, propid, RRF_RT_REG_SZ, &keytype, NULL, &size);
-            if(ret == ERROR_SUCCESS)
+            if (ret == ERROR_SUCCESS)
             {
                 *association = CoTaskMemAlloc(size);
-                if(*association)
+                if (*association)
                 {
                     ret = RegGetValueW(hkey, path, propid, RRF_RT_REG_SZ, &keytype, *association, &size);
-                    if(ret == ERROR_SUCCESS)
+                    if (ret == ERROR_SUCCESS)
                         hr = S_OK;
+                    else
+                    {
+                        CoTaskMemFree(*association);
+                        *association = NULL;
+                    }
                 }
                 else
                     hr = E_OUTOFMEMORY;
@@ -960,7 +971,6 @@ static HRESULT WINAPI ApplicationAssociationRegistration_QueryCurrentDefault(IAp
     }
 
     RegCloseKey(hkey);
-
     return hr;
 }
 
diff --git a/dlls/shell32/tests/assoc.c b/dlls/shell32/tests/assoc.c
index 8aa2535..0092081 100644
--- a/dlls/shell32/tests/assoc.c
+++ b/dlls/shell32/tests/assoc.c
@@ -192,7 +192,7 @@ static void test_IApplicationAssociationRegistration_QueryCurrentDefault(IApplic
     ok(hr == E_INVALIDARG, "got 0x%x\n", hr);
 
     hr = IApplicationAssociationRegistration_QueryCurrentDefault(appreg, spacetxtW, AT_FILEEXTENSION, AL_EFFECTIVE, &assocprog);
-    ok(hr == E_INVALIDARG || hr == HRESULT_FROM_WIN32(ERROR_NO_ASSOCIATION) /*Win8*/, "got 0x%x\n", hr);
+    ok(hr == E_INVALIDARG || hr == HRESULT_FROM_WIN32(ERROR_NO_ASSOCIATION) /* Win8 */, "got 0x%x\n", hr);
 
     hr = IApplicationAssociationRegistration_QueryCurrentDefault(appreg, httpW, AT_URLPROTOCOL, AL_EFFECTIVE, NULL);
     ok(hr == E_INVALIDARG, "got 0x%x\n", hr);
@@ -212,14 +212,13 @@ static void test_IApplicationAssociationRegistration_QueryCurrentDefault(IApplic
     hr = IApplicationAssociationRegistration_QueryCurrentDefault(appreg, httpW, AT_URLPROTOCOL, AL_EFFECTIVE, &assocprog);
     todo_wine ok(hr == S_OK, "got 0x%x\n", hr);
     trace("%s\n", wine_dbgstr_w(assocprog));
-
     CoTaskMemFree(assocprog);
 }
 
 START_TEST(assoc)
 {
     IQueryAssociations *qa;
-    IApplicationAssociationRegistration *appreg = NULL;
+    IApplicationAssociationRegistration *appreg;
     HRESULT hr;
 
     CoInitialize(NULL);
@@ -239,7 +238,7 @@ START_TEST(assoc)
 
     /* this works since Vista */
     hr = CoCreateInstance(&CLSID_ApplicationAssociationRegistration, NULL, CLSCTX_INPROC_SERVER,
-                          &IID_IApplicationAssociationRegistration, (LPVOID*)&appreg);
+                          &IID_IApplicationAssociationRegistration, (LPVOID *)&appreg);
     if (hr == S_OK)
     {
         test_IApplicationAssociationRegistration_QueryInterface(appreg);
-- 
2.3.0

