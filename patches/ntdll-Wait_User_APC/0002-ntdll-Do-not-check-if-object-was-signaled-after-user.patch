From e87ab2e2a235d7f70aa414bb7f103f9ecb214cec Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Fri, 9 Oct 2015 21:12:59 +0200
Subject: ntdll: Do not check if object was signaled after user APC in
 server_select.

---
 dlls/kernel32/tests/sync.c | 4 ----
 dlls/ntdll/server.c        | 5 +++--
 2 files changed, 3 insertions(+), 6 deletions(-)

diff --git a/dlls/kernel32/tests/sync.c b/dlls/kernel32/tests/sync.c
index 173793c..1065d5e 100644
--- a/dlls/kernel32/tests/sync.c
+++ b/dlls/kernel32/tests/sync.c
@@ -2317,20 +2317,16 @@ static DWORD WINAPI alertable_wait_thread(void *param)
 
     ReleaseSemaphore(semaphores[0], 1, NULL);
     result = WaitForMultipleObjectsEx(1, &semaphores[1], TRUE, 1000, TRUE);
-    todo_wine
     ok(result == WAIT_IO_COMPLETION, "expected WAIT_IO_COMPLETION, got %u\n", result);
     result = WaitForMultipleObjectsEx(1, &semaphores[1], TRUE, 200, TRUE);
-    todo_wine
     ok(result == WAIT_OBJECT_0, "expected WAIT_OBJECT_0, got %u\n", result);
 
     ReleaseSemaphore(semaphores[0], 1, NULL);
     timeout.QuadPart = -10000000;
     status = pNtWaitForMultipleObjects(1, &semaphores[1], FALSE, TRUE, &timeout);
-    todo_wine
     ok(status == STATUS_USER_APC, "expected STATUS_USER_APC, got %08x\n", status);
     timeout.QuadPart = -2000000;
     status = pNtWaitForMultipleObjects(1, &semaphores[1], FALSE, TRUE, &timeout);
-    todo_wine
     ok(status == STATUS_WAIT_0, "expected STATUS_WAIT_0, got %08x\n", status);
 
     ReleaseSemaphore(semaphores[0], 1, NULL);
diff --git a/dlls/ntdll/server.c b/dlls/ntdll/server.c
index 95111ad..7d8d1e9 100644
--- a/dlls/ntdll/server.c
+++ b/dlls/ntdll/server.c
@@ -614,10 +614,11 @@ unsigned int server_select( const select_op_t *select_op, data_size_t size, UINT
         if (ret != STATUS_USER_APC) break;
         if (invoke_apc( &call, &result ))
         {
-            /* if we ran a user apc we have to check once more if an object got signaled,
-             * but we don't want to wait */
+            /* if we ran a user apc, we have to check once more if
+             * additional apcs are queued, but we don't want to wait */
             abs_timeout = 0;
             user_apc = TRUE;
+            size = 0;
         }
 
         /* don't signal multiple times */
-- 
2.6.0

