From 7789f436e67ba0cf5c4be29f06e006ad883ac3f4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Sat, 22 Jul 2017 19:36:13 +0200
Subject: wined3d: Recognize conservative depth output registers in sm4.

---
 dlls/wined3d/arb_program_shader.c | 2 ++
 dlls/wined3d/glsl_shader.c        | 2 ++
 dlls/wined3d/shader.c             | 8 ++++++++
 dlls/wined3d/shader_sm4.c         | 4 ++++
 dlls/wined3d/wined3d_private.h    | 4 ++++
 5 files changed, 20 insertions(+)

diff --git a/dlls/wined3d/arb_program_shader.c b/dlls/wined3d/arb_program_shader.c
index 612a51b62b1..fa72b4f28b7 100644
--- a/dlls/wined3d/arb_program_shader.c
+++ b/dlls/wined3d/arb_program_shader.c
@@ -1194,6 +1194,8 @@ static void shader_arb_get_register_name(const struct wined3d_shader_instruction
                 sprintf(register_name, "%s", rastout_reg_names[reg->idx[0].offset]);
             break;
 
+        case WINED3DSPR_DEPTHOUT_GREATER_EQUAL:
+        case WINED3DSPR_DEPTHOUT_LESS_EQUAL:
         case WINED3DSPR_DEPTHOUT:
             strcpy(register_name, "result.depth");
             break;
diff --git a/dlls/wined3d/glsl_shader.c b/dlls/wined3d/glsl_shader.c
index e9baf40f859..df27c3286e7 100644
--- a/dlls/wined3d/glsl_shader.c
+++ b/dlls/wined3d/glsl_shader.c
@@ -2911,6 +2911,8 @@ static void shader_glsl_get_register_name(const struct wined3d_shader_register *
             sprintf(register_name, "%s", hwrastout_reg_names[reg->idx[0].offset]);
             break;
 
+        case WINED3DSPR_DEPTHOUT_GREATER_EQUAL:
+        case WINED3DSPR_DEPTHOUT_LESS_EQUAL:
         case WINED3DSPR_DEPTHOUT:
             sprintf(register_name, "gl_FragDepth");
             break;
diff --git a/dlls/wined3d/shader.c b/dlls/wined3d/shader.c
index 8827641e368..8485a0e784a 100644
--- a/dlls/wined3d/shader.c
+++ b/dlls/wined3d/shader.c
@@ -2108,6 +2108,14 @@ static void shader_dump_register(struct wined3d_string_buffer *buffer,
             shader_addline(buffer, "oC");
             break;
 
+        case WINED3DSPR_DEPTHOUT_GREATER_EQUAL:
+            shader_addline(buffer, "oDepth_greater_equal");
+            break;
+
+        case WINED3DSPR_DEPTHOUT_LESS_EQUAL:
+            shader_addline(buffer, "oDepth_less_equal");
+            break;
+
         case WINED3DSPR_DEPTHOUT:
             shader_addline(buffer, "oDepth");
             break;
diff --git a/dlls/wined3d/shader_sm4.c b/dlls/wined3d/shader_sm4.c
index 123ecbc78a4..88259977832 100644
--- a/dlls/wined3d/shader_sm4.c
+++ b/dlls/wined3d/shader_sm4.c
@@ -333,6 +333,8 @@ enum wined3d_sm4_register_type
     WINED3D_SM5_RT_COVERAGE                = 0x23,
     WINED3D_SM5_RT_LOCAL_THREAD_INDEX      = 0x24,
     WINED3D_SM5_RT_GS_INSTANCE_ID          = 0x25,
+    WINED3D_SM5_RT_DEPTHOUT_GREATER_EQUAL  = 0x26,
+    WINED3D_SM5_RT_DEPTHOUT_LESS_EQUAL     = 0x27,
 };
 
 enum wined3d_sm4_output_primitive_type
@@ -1148,6 +1150,8 @@ static const enum wined3d_shader_register_type register_type_table[] =
     /* WINED3D_SM5_RT_COVERAGE */                WINED3DSPR_COVERAGE,
     /* WINED3D_SM5_RT_LOCAL_THREAD_INDEX */      WINED3DSPR_LOCALTHREADINDEX,
     /* WINED3D_SM5_RT_GS_INSTANCE_ID */          WINED3DSPR_GSINSTID,
+    /* WINED3D_SM5_RT_DEPTHOUT_GREATER_EQUAL */  WINED3DSPR_DEPTHOUT_GREATER_EQUAL,
+    /* WINED3D_SM5_RT_DEPTHOUT_LESS_EQUAL*/      WINED3DSPR_DEPTHOUT_LESS_EQUAL,
 };
 
 static const struct wined3d_sm4_opcode_info *get_opcode_info(enum wined3d_sm4_opcode opcode)
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index eea73fa2965..040b068ad0e 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -490,6 +490,8 @@ enum wined3d_shader_register_type
     WINED3DSPR_COVERAGE,
     WINED3DSPR_SAMPLEMASK,
     WINED3DSPR_GSINSTID,
+    WINED3DSPR_DEPTHOUT_GREATER_EQUAL,
+    WINED3DSPR_DEPTHOUT_LESS_EQUAL,
 };
 
 enum wined3d_data_type
@@ -3987,6 +3989,8 @@ static inline BOOL shader_is_scalar(const struct wined3d_shader_register *reg)
             return FALSE;
 
         case WINED3DSPR_DEPTHOUT:   /* oDepth */
+        case WINED3DSPR_DEPTHOUT_GREATER_EQUAL:
+        case WINED3DSPR_DEPTHOUT_LESS_EQUAL:
         case WINED3DSPR_CONSTBOOL:  /* b# */
         case WINED3DSPR_LOOP:       /* aL */
         case WINED3DSPR_PREDICATE:  /* p0 */
-- 
2.13.1

