From 4ff0f3924789e3e2da8c7d408c43d4915ee5e247 Mon Sep 17 00:00:00 2001
From: Qian Hong <qhong@codeweavers.com>
Date: Thu, 30 Apr 2015 21:47:38 +0800
Subject: ntdll: Emulate \Device\Null using /dev/null in
 wine_nt_to_unix_file_name.

---
 dlls/ntdll/directory.c | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/dlls/ntdll/directory.c b/dlls/ntdll/directory.c
index bf15612..625e2ca 100644
--- a/dlls/ntdll/directory.c
+++ b/dlls/ntdll/directory.c
@@ -3008,6 +3008,7 @@ NTSTATUS CDECL wine_nt_to_unix_file_name( const UNICODE_STRING *nameW, ANSI_STRI
     static const WCHAR unixW[] = {'u','n','i','x'};
     static const WCHAR pipeW[] = {'p','i','p','e'};
     static const WCHAR invalid_charsW[] = { INVALID_NT_CHARS, 0 };
+    static const WCHAR device_nullW[] = {'\\','D','e','v','i','c','e','\\','N','u','l','l'};
 
     NTSTATUS status = STATUS_SUCCESS;
     const char *config_dir = wine_get_config_dir();
@@ -3024,6 +3025,22 @@ NTSTATUS CDECL wine_nt_to_unix_file_name( const UNICODE_STRING *nameW, ANSI_STRI
 
     if (!name_len || !IS_SEPARATOR(name[0])) return STATUS_OBJECT_PATH_SYNTAX_BAD;
 
+    if (name_len == sizeof(device_nullW) / sizeof(WCHAR) && !memicmpW( name, device_nullW, name_len ))
+    {
+        TRACE( "%s -> %s\n", debugstr_us(nameW), "/dev/null" );
+
+        unix_len = strlen("/dev/null");
+        if (!(unix_name = RtlAllocateHeap( GetProcessHeap(), 0, unix_len )))
+            return STATUS_NO_MEMORY;
+
+        strcpy( unix_name, "/dev/null" );
+        unix_name_ret->Buffer = unix_name;
+        unix_name_ret->Length = unix_len;
+        unix_name_ret->MaximumLength = unix_len + 1;
+
+        return STATUS_SUCCESS;
+    }
+
     if (!(pos = get_dos_prefix_len( nameW )))
         return STATUS_BAD_DEVICE_TYPE;  /* no DOS prefix, assume NT native name */
 
-- 
2.3.5

