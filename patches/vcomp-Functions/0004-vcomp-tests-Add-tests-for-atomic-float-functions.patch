From 520f89435a4d23962fc9acf1438a41e0d8a6f350 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Sun, 26 Jul 2015 02:00:04 +0200
Subject: vcomp/tests: Add tests for atomic float functions.

---
 dlls/vcomp/tests/vcomp.c | 30 ++++++++++++++++++++++++++++++
 1 file changed, 30 insertions(+)

diff --git a/dlls/vcomp/tests/vcomp.c b/dlls/vcomp/tests/vcomp.c
index 6405f1d..ddb691c 100644
--- a/dlls/vcomp/tests/vcomp.c
+++ b/dlls/vcomp/tests/vcomp.c
@@ -32,15 +32,19 @@ static BOOL   (WINAPI *pDeactivateActCtx)(DWORD, ULONG_PTR);
 static VOID   (WINAPI *pReleaseActCtx)(HANDLE);
 
 static void  (CDECL   *p_vcomp_atomic_add_i4)(int *dest, int val);
+static void  (CDECL   *p_vcomp_atomic_add_r4)(float *dest, float val);
 static void  (CDECL   *p_vcomp_atomic_and_i4)(int *dest, int val);
 static void  (CDECL   *p_vcomp_atomic_div_i4)(int *dest, int val);
+static void  (CDECL   *p_vcomp_atomic_div_r4)(float *dest, float val);
 static void  (CDECL   *p_vcomp_atomic_div_ui4)(unsigned int *dest, unsigned int val);
 static void  (CDECL   *p_vcomp_atomic_mul_i4)(int *dest, int val);
+static void  (CDECL   *p_vcomp_atomic_mul_r4)(float *dest, float val);
 static void  (CDECL   *p_vcomp_atomic_or_i4)(int *dest, int val);
 static void  (CDECL   *p_vcomp_atomic_shl_i4)(int *dest, int val);
 static void  (CDECL   *p_vcomp_atomic_shr_i4)(int *dest, int val);
 static void  (CDECL   *p_vcomp_atomic_shr_ui4)(unsigned int *dest, unsigned int val);
 static void  (CDECL   *p_vcomp_atomic_sub_i4)(int *dest, int val);
+static void  (CDECL   *p_vcomp_atomic_sub_r4)(float *dest, float val);
 static void  (CDECL   *p_vcomp_atomic_xor_i4)(int *dest, int val);
 static void  (CDECL   *p_vcomp_barrier)(void);
 static void  (CDECL   *p_vcomp_for_static_end)(void);
@@ -187,15 +191,19 @@ static BOOL init_vcomp(void)
     }
 
     VCOMP_GET_PROC(_vcomp_atomic_add_i4);
+    VCOMP_GET_PROC(_vcomp_atomic_add_r4);
     VCOMP_GET_PROC(_vcomp_atomic_and_i4);
     VCOMP_GET_PROC(_vcomp_atomic_div_i4);
+    VCOMP_GET_PROC(_vcomp_atomic_div_r4);
     VCOMP_GET_PROC(_vcomp_atomic_div_ui4);
     VCOMP_GET_PROC(_vcomp_atomic_mul_i4);
+    VCOMP_GET_PROC(_vcomp_atomic_mul_r4);
     VCOMP_GET_PROC(_vcomp_atomic_or_i4);
     VCOMP_GET_PROC(_vcomp_atomic_shl_i4);
     VCOMP_GET_PROC(_vcomp_atomic_shr_i4);
     VCOMP_GET_PROC(_vcomp_atomic_shr_ui4);
     VCOMP_GET_PROC(_vcomp_atomic_sub_i4);
+    VCOMP_GET_PROC(_vcomp_atomic_sub_r4);
     VCOMP_GET_PROC(_vcomp_atomic_xor_i4);
     VCOMP_GET_PROC(_vcomp_barrier);
     VCOMP_GET_PROC(_vcomp_for_static_end);
@@ -971,6 +979,27 @@ if (0)
     ok(val == 0x1ddbb997, "expected val == 0x1ddbb997, got %u\n", val);
 }
 
+static void test_atomic_float(void)
+{
+    float val;
+
+    val = 42.0;
+    p_vcomp_atomic_add_r4(&val, 17.0);
+    ok(58.9999 < val && val < 59.0001, "expected val == 59.0, got %f\n", val);
+
+    val = 42.0;
+    p_vcomp_atomic_div_r4(&val, 17.0);
+    ok(2.4705 < val && val < 2.4707, "expected val == 2.4706, got %f\n", val);
+
+    val = 42.0;
+    p_vcomp_atomic_mul_r4(&val, 17.0);
+    ok(713.9999 < val && val < 714.0001, "expected val == 714.0, got %f\n", val);
+
+    val = 42.0;
+    p_vcomp_atomic_sub_r4(&val, 17.0);
+    ok(24.9999 < val && val < 25.0001, "expected val == 25.0, got %f\n", val);
+}
+
 START_TEST(vcomp)
 {
     if (!init_vcomp())
@@ -984,6 +1013,7 @@ START_TEST(vcomp)
     test_vcomp_for_static_init();
     test_atomic_int32();
     test_atomic_uint32();
+    test_atomic_float();
 
     release_vcomp();
 }
-- 
2.4.5

