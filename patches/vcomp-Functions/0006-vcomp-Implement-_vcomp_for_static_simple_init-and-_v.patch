From 7b64b41a512320a89e7758db43343ebe99c0f563 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Sat, 11 Jul 2015 18:59:41 +0200
Subject: vcomp: Implement _vcomp_for_static_simple_init and
 _vcomp_for_static_end.

---
 dlls/vcomp/main.c           | 90 +++++++++++++++++++++++++++++++++++++++++++++
 dlls/vcomp/vcomp.spec       |  4 +-
 dlls/vcomp100/vcomp100.spec |  4 +-
 dlls/vcomp90/vcomp90.spec   |  4 +-
 4 files changed, 96 insertions(+), 6 deletions(-)

diff --git a/dlls/vcomp/main.c b/dlls/vcomp/main.c
index bcaa4ea..fcbd747 100644
--- a/dlls/vcomp/main.c
+++ b/dlls/vcomp/main.c
@@ -301,6 +301,96 @@ void CDECL _vcomp_single_end(void)
     TRACE("stub\n");
 }
 
+void CDECL _vcomp_for_static_simple_init(unsigned int first, unsigned int last, int step, BOOL forward,
+                                         unsigned int *begin, unsigned int *end)
+{
+    struct vcomp_thread_data *thread_data = vcomp_init_thread_data();
+    struct vcomp_team_data *team_data = thread_data->team;
+    unsigned int iterations, per_thread, remaining;
+    DWORD num_threads, thread_num;
+
+    TRACE("(%d, %d, %d, %d, %p, %p)\n", first, last, step, forward, begin, end);
+
+    num_threads = team_data->num_threads;
+    thread_num  = thread_data->thread_num;
+
+    if (num_threads == 1)
+    {
+        *begin = first;
+        *end   = last;
+        return;
+    }
+
+    if (step <= 0)
+    {
+        *begin = 0;
+        *end   = forward ? -1 : 1;
+        return;
+    }
+
+    if (forward)
+    {
+        DWORD64 last64 = last;
+        if (last64 < first)
+            last64 += 0x100000000;
+
+        iterations = 1 + (last64 - first) / step;
+        per_thread = iterations / num_threads;
+        remaining  = iterations - per_thread * num_threads;
+
+        if (thread_num < remaining)
+        {
+            per_thread++;
+        }
+        else if (per_thread)
+        {
+            first += remaining * step;
+        }
+        else
+        {
+            *begin = first;
+            *end   = first - step;
+            return;
+        }
+
+        *begin = first + per_thread * thread_num * step;
+        *end   = *begin + (per_thread - 1) * step;
+    }
+    else
+    {
+        DWORD first64 = first;
+        if (first64 < last)
+            first64 += 0x100000000;
+
+        iterations = 1 + (first64 - last) / step;
+        per_thread = iterations / num_threads;
+        remaining  = iterations - per_thread * num_threads;
+
+        if (thread_num < remaining)
+        {
+            per_thread++;
+        }
+        else if (per_thread)
+        {
+            first64 -= remaining * step;
+        }
+        else
+        {
+            *begin = first64;
+            *end   = first64 + step;
+            return;
+        }
+
+        *begin = first64 - per_thread * thread_num * step;
+        *end   = *begin - (per_thread - 1) * step;
+    }
+}
+
+void CDECL _vcomp_for_static_end(void)
+{
+    TRACE("()\n");
+}
+
 static DWORD WINAPI _vcomp_fork_worker(void *param)
 {
     struct vcomp_thread_data *thread_data = param;
diff --git a/dlls/vcomp/vcomp.spec b/dlls/vcomp/vcomp.spec
index d446574..b14edca 100644
--- a/dlls/vcomp/vcomp.spec
+++ b/dlls/vcomp/vcomp.spec
@@ -59,10 +59,10 @@
 @ stub _vcomp_for_dynamic_init_i8
 @ stub _vcomp_for_dynamic_next
 @ stub _vcomp_for_dynamic_next_i8
-@ stub _vcomp_for_static_end
+@ cdecl _vcomp_for_static_end()
 @ stub _vcomp_for_static_init
 @ stub _vcomp_for_static_init_i8
-@ stub _vcomp_for_static_simple_init
+@ cdecl _vcomp_for_static_simple_init(long long long long ptr ptr)
 @ stub _vcomp_for_static_simple_init_i8
 @ varargs _vcomp_fork(long long ptr)
 @ stub _vcomp_get_thread_num
diff --git a/dlls/vcomp100/vcomp100.spec b/dlls/vcomp100/vcomp100.spec
index 2c04e91..89e0972 100644
--- a/dlls/vcomp100/vcomp100.spec
+++ b/dlls/vcomp100/vcomp100.spec
@@ -59,10 +59,10 @@
 @ stub _vcomp_for_dynamic_init_i8
 @ stub _vcomp_for_dynamic_next
 @ stub _vcomp_for_dynamic_next_i8
-@ stub _vcomp_for_static_end
+@ cdecl _vcomp_for_static_end() vcomp._vcomp_for_static_end
 @ stub _vcomp_for_static_init
 @ stub _vcomp_for_static_init_i8
-@ stub _vcomp_for_static_simple_init
+@ cdecl _vcomp_for_static_simple_init(long long long long ptr ptr) vcomp._vcomp_for_static_simple_init
 @ stub _vcomp_for_static_simple_init_i8
 @ varargs _vcomp_fork(long long ptr) vcomp._vcomp_fork
 @ stub _vcomp_get_thread_num
diff --git a/dlls/vcomp90/vcomp90.spec b/dlls/vcomp90/vcomp90.spec
index 2c04e91..89e0972 100644
--- a/dlls/vcomp90/vcomp90.spec
+++ b/dlls/vcomp90/vcomp90.spec
@@ -59,10 +59,10 @@
 @ stub _vcomp_for_dynamic_init_i8
 @ stub _vcomp_for_dynamic_next
 @ stub _vcomp_for_dynamic_next_i8
-@ stub _vcomp_for_static_end
+@ cdecl _vcomp_for_static_end() vcomp._vcomp_for_static_end
 @ stub _vcomp_for_static_init
 @ stub _vcomp_for_static_init_i8
-@ stub _vcomp_for_static_simple_init
+@ cdecl _vcomp_for_static_simple_init(long long long long ptr ptr) vcomp._vcomp_for_static_simple_init
 @ stub _vcomp_for_static_simple_init_i8
 @ varargs _vcomp_fork(long long ptr) vcomp._vcomp_fork
 @ stub _vcomp_get_thread_num
-- 
2.4.5

