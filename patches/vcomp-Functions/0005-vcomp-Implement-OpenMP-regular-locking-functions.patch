From 78df40d0132f693de1ccae95f91a411ff8ce30dc Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Tue, 11 Aug 2015 06:08:34 +0200
Subject: vcomp: Implement OpenMP regular locking functions.

---
 dlls/vcomp/main.c           | 35 +++++++++++++++++++++++++++++++++++
 dlls/vcomp/vcomp.spec       |  6 +++---
 dlls/vcomp100/vcomp100.spec |  6 +++---
 dlls/vcomp110/vcomp110.spec |  6 +++---
 dlls/vcomp90/vcomp90.spec   |  6 +++---
 5 files changed, 47 insertions(+), 12 deletions(-)

diff --git a/dlls/vcomp/main.c b/dlls/vcomp/main.c
index a110c11..8a87f47 100644
--- a/dlls/vcomp/main.c
+++ b/dlls/vcomp/main.c
@@ -1010,6 +1010,12 @@ static void destroy_critsect(CRITICAL_SECTION *critsect)
     HeapFree(GetProcessHeap(), 0, critsect);
 }
 
+static BOOL critsect_is_owned(CRITICAL_SECTION *critsect)
+{
+    return critsect->OwningThread == ULongToHandle(GetCurrentThreadId()) &&
+           critsect->RecursionCount;
+}
+
 void CDECL omp_init_lock(omp_lock_t *lock)
 {
     TRACE("(%p)\n", lock);
@@ -1022,6 +1028,35 @@ void CDECL omp_destroy_lock(omp_lock_t *lock)
     destroy_critsect(*lock);
 }
 
+void CDECL omp_set_lock(omp_lock_t *lock)
+{
+    TRACE("(%p)\n", lock);
+
+    if (critsect_is_owned(*lock))
+    {
+        ERR("omp_set_lock called while holding lock %p\n", *lock);
+        ExitProcess(1);
+    }
+
+    EnterCriticalSection(*lock);
+}
+
+void CDECL omp_unset_lock(omp_lock_t *lock)
+{
+    TRACE("(%p)\n", lock);
+    LeaveCriticalSection(*lock);
+}
+
+int CDECL omp_test_lock(omp_lock_t *lock)
+{
+    TRACE("(%p)\n", lock);
+
+    if (critsect_is_owned(*lock))
+        return 0;
+
+    return TryEnterCriticalSection(*lock);
+}
+
 void CDECL omp_set_nest_lock(omp_nest_lock_t *lock)
 {
     TRACE("(%p)\n", lock);
diff --git a/dlls/vcomp/vcomp.spec b/dlls/vcomp/vcomp.spec
index 4c89879..52b929f 100644
--- a/dlls/vcomp/vcomp.spec
+++ b/dlls/vcomp/vcomp.spec
@@ -102,11 +102,11 @@
 @ cdecl omp_init_lock(ptr)
 @ cdecl omp_init_nest_lock(ptr) omp_init_lock
 @ cdecl omp_set_dynamic(long)
-@ stub omp_set_lock
+@ cdecl omp_set_lock(ptr)
 @ cdecl omp_set_nest_lock(ptr)
 @ cdecl omp_set_nested(long)
 @ cdecl omp_set_num_threads(long)
-@ stub omp_test_lock
+@ cdecl omp_test_lock(ptr)
 @ cdecl omp_test_nest_lock(ptr)
-@ stub omp_unset_lock
+@ cdecl omp_unset_lock(ptr)
 @ cdecl omp_unset_nest_lock(ptr)
diff --git a/dlls/vcomp100/vcomp100.spec b/dlls/vcomp100/vcomp100.spec
index 9021b10..4b646eb 100644
--- a/dlls/vcomp100/vcomp100.spec
+++ b/dlls/vcomp100/vcomp100.spec
@@ -102,11 +102,11 @@
 @ cdecl omp_init_lock(ptr) vcomp.omp_init_lock
 @ cdecl omp_init_nest_lock(ptr) vcomp.omp_init_nest_lock
 @ cdecl omp_set_dynamic(long) vcomp.omp_set_dynamic
-@ stub omp_set_lock
+@ cdecl omp_set_lock(ptr) vcomp.omp_set_lock
 @ cdecl omp_set_nest_lock(ptr) vcomp.omp_set_nest_lock
 @ cdecl omp_set_nested(long) vcomp.omp_set_nested
 @ cdecl omp_set_num_threads(long) vcomp.omp_set_num_threads
-@ stub omp_test_lock
+@ cdecl omp_test_lock(ptr) vcomp.omp_test_lock
 @ cdecl omp_test_nest_lock(ptr) vcomp.omp_test_nest_lock
-@ stub omp_unset_lock
+@ cdecl omp_unset_lock(ptr) vcomp.omp_unset_lock
 @ cdecl omp_unset_nest_lock(ptr) vcomp.omp_unset_nest_lock
diff --git a/dlls/vcomp110/vcomp110.spec b/dlls/vcomp110/vcomp110.spec
index 4f7503f..1ee7fba 100644
--- a/dlls/vcomp110/vcomp110.spec
+++ b/dlls/vcomp110/vcomp110.spec
@@ -103,11 +103,11 @@
 @ cdecl omp_init_lock(ptr) vcomp.omp_init_lock
 @ cdecl omp_init_nest_lock(ptr) vcomp.omp_init_nest_lock
 @ cdecl omp_set_dynamic(long) vcomp.omp_set_dynamic
-@ stub omp_set_lock
+@ cdecl omp_set_lock(ptr) vcomp.omp_set_lock
 @ cdecl omp_set_nest_lock(ptr) vcomp.omp_set_nest_lock
 @ cdecl omp_set_nested(long) vcomp.omp_set_nested
 @ cdecl omp_set_num_threads(long) vcomp.omp_set_num_threads
-@ stub omp_test_lock
+@ cdecl omp_test_lock(ptr) vcomp.omp_test_lock
 @ cdecl omp_test_nest_lock(ptr) vcomp.omp_test_nest_lock
-@ stub omp_unset_lock
+@ cdecl omp_unset_lock(ptr) vcomp.omp_unset_lock
 @ cdecl omp_unset_nest_lock(ptr) vcomp.omp_unset_nest_lock
diff --git a/dlls/vcomp90/vcomp90.spec b/dlls/vcomp90/vcomp90.spec
index 9021b10..4b646eb 100644
--- a/dlls/vcomp90/vcomp90.spec
+++ b/dlls/vcomp90/vcomp90.spec
@@ -102,11 +102,11 @@
 @ cdecl omp_init_lock(ptr) vcomp.omp_init_lock
 @ cdecl omp_init_nest_lock(ptr) vcomp.omp_init_nest_lock
 @ cdecl omp_set_dynamic(long) vcomp.omp_set_dynamic
-@ stub omp_set_lock
+@ cdecl omp_set_lock(ptr) vcomp.omp_set_lock
 @ cdecl omp_set_nest_lock(ptr) vcomp.omp_set_nest_lock
 @ cdecl omp_set_nested(long) vcomp.omp_set_nested
 @ cdecl omp_set_num_threads(long) vcomp.omp_set_num_threads
-@ stub omp_test_lock
+@ cdecl omp_test_lock(ptr) vcomp.omp_test_lock
 @ cdecl omp_test_nest_lock(ptr) vcomp.omp_test_nest_lock
-@ stub omp_unset_lock
+@ cdecl omp_unset_lock(ptr) vcomp.omp_unset_lock
 @ cdecl omp_unset_nest_lock(ptr) vcomp.omp_unset_nest_lock
-- 
2.5.0

