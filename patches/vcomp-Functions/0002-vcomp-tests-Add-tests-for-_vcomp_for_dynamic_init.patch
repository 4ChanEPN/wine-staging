From a175543f726f1205054a69bef12d901453326016 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Sun, 19 Jul 2015 01:05:02 +0200
Subject: vcomp/tests: Add tests for _vcomp_for_dynamic_init.

---
 dlls/vcomp/tests/vcomp.c | 68 ++++++++++++++++++++++++++++++++++++++++++++++++
 1 file changed, 68 insertions(+)

diff --git a/dlls/vcomp/tests/vcomp.c b/dlls/vcomp/tests/vcomp.c
index bb1026b..769edf9 100644
--- a/dlls/vcomp/tests/vcomp.c
+++ b/dlls/vcomp/tests/vcomp.c
@@ -32,6 +32,9 @@ static BOOL   (WINAPI *pDeactivateActCtx)(DWORD, ULONG_PTR);
 static VOID   (WINAPI *pReleaseActCtx)(HANDLE);
 
 static void  (CDECL   *p_vcomp_barrier)(void);
+static void  (CDECL   *p_vcomp_for_dynamic_init)(unsigned int flags, unsigned int first, unsigned int last,
+                                                 int step, unsigned int chunksize);
+static int   (CDECL   *p_vcomp_for_dynamic_next)(unsigned int *begin, unsigned int *end);
 static void  (CDECL   *p_vcomp_for_static_end)(void);
 static void  (CDECL   *p_vcomp_for_static_init)(int first, int last, int step, int chunksize, unsigned int *loops,
                                                 int *begin, int *end, int *next, int *lastchunk);
@@ -176,6 +179,8 @@ static BOOL init_vcomp(void)
     }
 
     VCOMP_GET_PROC(_vcomp_barrier);
+    VCOMP_GET_PROC(_vcomp_for_dynamic_init);
+    VCOMP_GET_PROC(_vcomp_for_dynamic_next);
     VCOMP_GET_PROC(_vcomp_for_static_end);
     VCOMP_GET_PROC(_vcomp_for_static_init);
     VCOMP_GET_PROC(_vcomp_for_static_simple_init);
@@ -849,6 +854,68 @@ static void test_vcomp_for_static_init(void)
     pomp_set_num_threads(max_threads);
 }
 
+static void CDECL for_dynamic_cb(LONG *a, LONG *b, LONG *c)
+{
+    unsigned int begin, end;
+
+    p_vcomp_for_dynamic_init(0x40, 1, 999983, 1, 30);
+    while (p_vcomp_for_dynamic_next(&begin, &end))
+    {
+        InterlockedExchangeAdd(a, end - begin + 1);
+        Sleep(1);
+    }
+
+    p_vcomp_for_dynamic_init(0, 99991, 1, 1, 50);
+    while (p_vcomp_for_dynamic_next(&begin, &end))
+    {
+        InterlockedExchangeAdd(b, begin - end + 1);
+        Sleep(1);
+    }
+
+    p_vcomp_for_dynamic_init(0x40, 1, 9973, 7, 30);
+    while (p_vcomp_for_dynamic_next(&begin, &end))
+    {
+        while (begin <= end)
+        {
+            InterlockedIncrement(c);
+            begin += 7;
+        }
+        Sleep(1);
+    }
+}
+
+static void test_vcomp_for_dynamic_init(void)
+{
+    int max_threads = pomp_get_max_threads();
+    LONG a, b, c;
+    int i;
+
+    a = b = c = 0;
+    for_dynamic_cb(&a, &b, &c);
+    ok(a == 999983, "expected a == 999983, got %d\n", a);
+    ok(b == 99991, "expected b == 99991, got %d\n", b);
+    ok(c == 1425, "expected c == 1425, got %d\n", c);
+
+    for (i = 1; i <= 4; i++)
+    {
+        pomp_set_num_threads(i);
+
+        a = b = c = 0;
+        p_vcomp_fork(TRUE, 3, for_dynamic_cb, &a, &b, &c);
+        ok(a == 999983, "expected a == 999983, got %d\n", a);
+        ok(b == 99991, "expected b == 99991, got %d\n", b);
+        ok(c == 1425, "expected c == 1425, got %d\n", c);
+
+        a = b = c = 0;
+        p_vcomp_fork(FALSE, 3, for_dynamic_cb, &a, &b, &c);
+        ok(a == 999983, "expected a == 999983, got %d\n", a);
+        ok(b == 99991, "expected b == 99991, got %d\n", b);
+        ok(c == 1425, "expected c == 1425, got %d\n", c);
+    }
+
+    pomp_set_num_threads(max_threads);
+}
+
 START_TEST(vcomp)
 {
     if (!init_vcomp())
@@ -860,6 +927,7 @@ START_TEST(vcomp)
     test_vcomp_sections_init();
     test_vcomp_for_static_simple_init();
     test_vcomp_for_static_init();
+    test_vcomp_for_dynamic_init();
 
     release_vcomp();
 }
-- 
2.4.5

