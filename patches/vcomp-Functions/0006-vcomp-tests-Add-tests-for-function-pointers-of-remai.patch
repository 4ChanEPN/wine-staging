From 2f46b96355314dfe76d6baea838f3f57b0890346 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Tue, 11 Aug 2015 06:10:50 +0200
Subject: vcomp/tests: Add tests for function pointers of remaining lock
 functions.

---
 dlls/vcomp/tests/vcomp.c | 22 ++++++++++++++++++++++
 1 file changed, 22 insertions(+)

diff --git a/dlls/vcomp/tests/vcomp.c b/dlls/vcomp/tests/vcomp.c
index ccb6792..821a552 100644
--- a/dlls/vcomp/tests/vcomp.c
+++ b/dlls/vcomp/tests/vcomp.c
@@ -82,8 +82,14 @@ static int   (CDECL   *pomp_get_thread_num)(void);
 static int   (CDECL   *pomp_in_parallel)(void);
 static void  (CDECL   *pomp_init_lock)(omp_lock_t *lock);
 static void  (CDECL   *pomp_init_nest_lock)(omp_nest_lock_t *lock);
+static void  (CDECL   *pomp_set_lock)(omp_lock_t *lock);
+static void  (CDECL   *pomp_set_nest_lock)(omp_nest_lock_t *lock);
 static void  (CDECL   *pomp_set_nested)(int nested);
 static void  (CDECL   *pomp_set_num_threads)(int num_threads);
+static int   (CDECL   *pomp_test_lock)(omp_lock_t *lock);
+static int   (CDECL   *pomp_test_nest_lock)(omp_nest_lock_t *lock);
+static void  (CDECL   *pomp_unset_lock)(omp_lock_t *lock);
+static void  (CDECL   *pomp_unset_nest_lock)(omp_nest_lock_t *lock);
 
 #define VCOMP_DYNAMIC_FLAGS_STATIC      0x01
 #define VCOMP_DYNAMIC_FLAGS_CHUNKED     0x02
@@ -261,8 +267,14 @@ static BOOL init_vcomp(void)
     VCOMP_GET_PROC(omp_in_parallel);
     VCOMP_GET_PROC(omp_init_lock);
     VCOMP_GET_PROC(omp_init_nest_lock);
+    VCOMP_GET_PROC(omp_set_lock);
+    VCOMP_GET_PROC(omp_set_nest_lock);
     VCOMP_GET_PROC(omp_set_nested);
     VCOMP_GET_PROC(omp_set_num_threads);
+    VCOMP_GET_PROC(omp_test_lock);
+    VCOMP_GET_PROC(omp_test_nest_lock);
+    VCOMP_GET_PROC(omp_unset_lock);
+    VCOMP_GET_PROC(omp_unset_nest_lock);
 
     return TRUE;
 }
@@ -1297,6 +1309,16 @@ static void test_omp_init_nest_lock(void)
     ok(pomp_destroy_lock == pomp_destroy_nest_lock,
        "expected omp_destroy_lock == omp_destroy_nest_lock, got %p and %p\n",
        pomp_destroy_lock, pomp_destroy_nest_lock);
+
+    ok(pomp_set_lock != pomp_set_nest_lock,
+       "expected omp_set_lock != omp_set_nest_lock, got %p and %p\n",
+       pomp_set_lock, pomp_set_nest_lock);
+    ok(pomp_unset_lock != pomp_unset_nest_lock,
+       "expected omp_unset_lock != omp_unset_nest_lock, got %p and %p\n",
+       pomp_unset_lock, pomp_unset_nest_lock);
+    ok(pomp_test_lock != pomp_test_nest_lock,
+       "expected omp_test_lock != omp_test_nest_lock, got %p and %p\n",
+       pomp_test_lock, pomp_test_nest_lock);
 }
 
 static void test_atomic_integer32(void)
-- 
2.5.0

