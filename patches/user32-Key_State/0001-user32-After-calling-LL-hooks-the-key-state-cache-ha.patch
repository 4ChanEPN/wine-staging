From bd1a61f0fe9aee47535902b65bf3fcf669574b93 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Mon, 14 Jul 2014 05:06:40 +0200
Subject: user32: After calling LL hooks the key state cache has to be
 invalidated globally.

---
 dlls/user32/hook.c         | 2 +-
 dlls/user32/input.c        | 8 ++++++--
 dlls/user32/message.c      | 7 ++++++-
 dlls/user32/user_private.h | 5 ++++-
 4 files changed, 17 insertions(+), 5 deletions(-)

diff --git a/dlls/user32/hook.c b/dlls/user32/hook.c
index 2f6b42c..0c6a059 100644
--- a/dlls/user32/hook.c
+++ b/dlls/user32/hook.c
@@ -437,7 +437,7 @@ static LRESULT call_hook( struct hook_info *info, INT code, WPARAM wparam, LPARA
     }
 
     if (info->id == WH_KEYBOARD_LL || info->id == WH_MOUSE_LL)
-        get_user_thread_info()->key_state_time = 0;  /* force refreshing the key state cache */
+        interlocked_xchg_add(&global_key_state_epoch, 1);  /* force refreshing the key state cache */
 
     return ret;
 }
diff --git a/dlls/user32/input.c b/dlls/user32/input.c
index 1f05f34..5671285 100644
--- a/dlls/user32/input.c
+++ b/dlls/user32/input.c
@@ -52,6 +52,7 @@
 WINE_DEFAULT_DEBUG_CHANNEL(win);
 WINE_DECLARE_DEBUG_CHANNEL(keyboard);
 
+INT global_key_state_epoch = 0;
 
 /***********************************************************************
  *           get_key_state
@@ -369,6 +370,7 @@ static void check_for_events( UINT flags )
 SHORT WINAPI DECLSPEC_HOTPATCH GetAsyncKeyState( INT key )
 {
     struct user_thread_info *thread_info = get_user_thread_info();
+    INT epoch = global_key_state_epoch;
     SHORT ret;
 
     if (key < 0 || key >= 256) return 0;
@@ -379,7 +381,8 @@ SHORT WINAPI DECLSPEC_HOTPATCH GetAsyncKeyState( INT key )
     {
         if (thread_info->key_state &&
             !(thread_info->key_state[key] & 0xc0) &&
-            GetTickCount() - thread_info->key_state_time < 50)
+            GetTickCount() - thread_info->key_state_time < 50 &&
+            thread_info->key_state_epoch == epoch)
             return 0;
 
         if (!thread_info->key_state) thread_info->key_state = HeapAlloc( GetProcessHeap(), 0, 256 );
@@ -394,7 +397,8 @@ SHORT WINAPI DECLSPEC_HOTPATCH GetAsyncKeyState( INT key )
             {
                 if (reply->state & 0x40) ret |= 0x0001;
                 if (reply->state & 0x80) ret |= 0x8000;
-                thread_info->key_state_time = GetTickCount();
+                thread_info->key_state_time  = GetTickCount();
+                thread_info->key_state_epoch = epoch;
             }
         }
         SERVER_END_REQ;
diff --git a/dlls/user32/message.c b/dlls/user32/message.c
index eac4e4d..d59e342 100644
--- a/dlls/user32/message.c
+++ b/dlls/user32/message.c
@@ -3294,6 +3294,7 @@ NTSTATUS send_hardware_message( HWND hwnd, const INPUT *input, UINT flags )
     struct send_message_info info;
     int prev_x, prev_y, new_x, new_y;
     NTSTATUS ret;
+    INT epoch = global_key_state_epoch;
     BOOL wait;
 
     info.type     = MSG_HARDWARE;
@@ -3341,7 +3342,11 @@ NTSTATUS send_hardware_message( HWND hwnd, const INPUT *input, UINT flags )
 
     if (!ret)
     {
-        if (thread_info->key_state) thread_info->key_state_time = GetTickCount();
+        if (thread_info->key_state)
+        {
+            thread_info->key_state_time  = GetTickCount();
+            thread_info->key_state_epoch = epoch;
+        }
         if ((flags & SEND_HWMSG_INJECTED) && (prev_x != new_x || prev_y != new_y))
             USER_Driver->pSetCursorPos( new_x, new_y );
     }
diff --git a/dlls/user32/user_private.h b/dlls/user32/user_private.h
index adf3f7d..aa43578 100644
--- a/dlls/user32/user_private.h
+++ b/dlls/user32/user_private.h
@@ -184,15 +184,18 @@ struct user_thread_info
     DWORD                         GetMessagePosVal;       /* Value for GetMessagePos */
     ULONG_PTR                     GetMessageExtraInfoVal; /* Value for GetMessageExtraInfo */
     UINT                          active_hooks;           /* Bitmap of active hooks */
+    INT                           key_state_epoch;        /* Counter to invalidate the key state */
     UINT                          key_state_time;         /* Time of last key state refresh */
     BYTE                         *key_state;              /* Cache of global key state */
     HWND                          top_window;             /* Desktop window */
     HWND                          msg_window;             /* HWND_MESSAGE parent window */
     RAWINPUT                     *rawinput;
 
-    ULONG                         pad[6];                 /* Available for more data */
+    ULONG                         pad[5];                 /* Available for more data */
 };
 
+extern INT global_key_state_epoch DECLSPEC_HIDDEN;
+
 struct hook_extra_info
 {
     HHOOK handle;
-- 
2.3.2

