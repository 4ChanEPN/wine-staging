From cc2e88887b8a809a49d0712cf2423663510f9741 Mon Sep 17 00:00:00 2001
From: Jactry Zeng <jzeng@codeweavers.com>
Date: Sun, 28 Sep 2014 13:17:49 +0800
Subject: riched20: Add COM aggregation support for IRichEditOle.

---
 dlls/riched20/editor.c  |  4 +-
 dlls/riched20/editor.h  |  2 +-
 dlls/riched20/richole.c | 98 ++++++++++++++++++++++++++++++++++---------------
 3 files changed, 71 insertions(+), 33 deletions(-)

diff --git a/dlls/riched20/editor.c b/dlls/riched20/editor.c
index 3c0d970..a331001 100644
--- a/dlls/riched20/editor.c
+++ b/dlls/riched20/editor.c
@@ -1194,7 +1194,7 @@ static BOOL ME_RTFInsertOleObject(RTF_Info *info, HENHMETAFILE hemf, HBITMAP hbm
 
   if (!info->lpRichEditOle)
   {
-    CreateIRichEditOle(info->editor, (VOID**)&info->lpRichEditOle);
+    CreateIRichEditOle(NULL, info->editor, (VOID**)&info->lpRichEditOle);
   }
 
   if (OleCreateDefaultHandler(&CLSID_NULL, NULL, &IID_IOleObject, (void**)&lpObject) == S_OK &&
@@ -4474,7 +4474,7 @@ LRESULT ME_HandleMessage(ME_TextEditor *editor, UINT msg, WPARAM wParam,
   case EM_GETOLEINTERFACE:
   {
     if (!editor->reOle)
-      if (!CreateIRichEditOle(editor, (LPVOID *)&editor->reOle))
+      if (!CreateIRichEditOle(NULL, editor, (LPVOID *)&editor->reOle))
         return 0;
     *(LPVOID *)lParam = editor->reOle;
     IRichEditOle_AddRef(editor->reOle);
diff --git a/dlls/riched20/editor.h b/dlls/riched20/editor.h
index edbac8e..75a3894 100644
--- a/dlls/riched20/editor.h
+++ b/dlls/riched20/editor.h
@@ -240,7 +240,7 @@ void ME_UpdateScrollBar(ME_TextEditor *editor) DECLSPEC_HIDDEN;
 int ME_GetParaBorderWidth(const ME_Context *c, int flags) DECLSPEC_HIDDEN;
 
 /* richole.c */
-LRESULT CreateIRichEditOle(ME_TextEditor *editor, LPVOID *) DECLSPEC_HIDDEN;
+LRESULT CreateIRichEditOle(IUnknown *outer_unk, ME_TextEditor *editor, LPVOID *ppvObj) DECLSPEC_HIDDEN;
 void ME_DrawOLE(ME_Context *c, int x, int y, ME_Run* run, ME_Paragraph *para, BOOL selected) DECLSPEC_HIDDEN;
 void ME_GetOLEObjectSize(const ME_Context *c, ME_Run *run, SIZE *pSize) DECLSPEC_HIDDEN;
 void ME_CopyReObject(REOBJECT* dst, const REOBJECT* src) DECLSPEC_HIDDEN;
diff --git a/dlls/riched20/richole.c b/dlls/riched20/richole.c
index a0ba2dc..7e620ef 100644
--- a/dlls/riched20/richole.c
+++ b/dlls/riched20/richole.c
@@ -56,8 +56,10 @@ typedef struct ITextFontImpl ITextFontImpl;
 typedef struct ITextParaImpl ITextParaImpl;
 
 typedef struct IRichEditOleImpl {
+    IUnknown IUnknown_inner;
     IRichEditOle IRichEditOle_iface;
     ITextDocument ITextDocument_iface;
+    IUnknown *outer_unk;
     LONG ref;
 
     ME_TextEditor *editor;
@@ -111,54 +113,45 @@ struct IOleClientSiteImpl {
     IRichEditOleImpl *reOle;
 };
 
-static inline IRichEditOleImpl *impl_from_IRichEditOle(IRichEditOle *iface)
+static inline IRichEditOleImpl *impl_from_IUnknown(IUnknown *iface)
 {
-    return CONTAINING_RECORD(iface, IRichEditOleImpl, IRichEditOle_iface);
+    return CONTAINING_RECORD(iface, IRichEditOleImpl, IUnknown_inner);
 }
 
-static inline IRichEditOleImpl *impl_from_ITextDocument(ITextDocument *iface)
+static HRESULT WINAPI IRichEditOleImpl_fnQueryInterface(IUnknown *iface, REFIID riid, LPVOID* ppvObj)
 {
-    return CONTAINING_RECORD(iface, IRichEditOleImpl, ITextDocument_iface);
-}
+    IRichEditOleImpl *This = impl_from_IUnknown(iface);
 
-static HRESULT WINAPI
-IRichEditOle_fnQueryInterface(IRichEditOle *me, REFIID riid, LPVOID *ppvObj)
-{
-    IRichEditOleImpl *This = impl_from_IRichEditOle(me);
-
-    TRACE("%p %s\n", This, debugstr_guid(riid) );
+    TRACE("(%p)->(%s, %p)\n", This, debugstr_guid(riid), ppvObj);
 
-    *ppvObj = NULL;
-    if (IsEqualGUID(riid, &IID_IUnknown) ||
-        IsEqualGUID(riid, &IID_IRichEditOle))
+    if (IsEqualGUID(riid, &IID_IUnknown))
+        *ppvObj = &This->IUnknown_inner;
+    else if (IsEqualGUID(riid, &IID_IRichEditOle))
         *ppvObj = &This->IRichEditOle_iface;
     else if (IsEqualGUID(riid, &IID_ITextDocument))
         *ppvObj = &This->ITextDocument_iface;
-    if (*ppvObj)
-    {
-        IRichEditOle_AddRef(me);
-        return S_OK;
+    else {
+        FIXME("%p: unhandled interface %s\n", This, debugstr_guid(riid));
+        return E_NOINTERFACE;
     }
-    FIXME("%p: unhandled interface %s\n", This, debugstr_guid(riid) );
- 
-    return E_NOINTERFACE;   
+
+    IUnknown_AddRef((IUnknown *)*ppvObj);
+    return S_OK;
 }
 
-static ULONG WINAPI
-IRichEditOle_fnAddRef(IRichEditOle *me)
+static ULONG WINAPI IRichEditOleImpl_fnAddRef(IUnknown *iface)
 {
-    IRichEditOleImpl *This = impl_from_IRichEditOle(me);
-    ULONG ref = InterlockedIncrement( &This->ref );
+    IRichEditOleImpl *This = impl_from_IUnknown(iface);
+    ULONG ref = InterlockedIncrement(&This->ref);
 
     TRACE("%p ref = %u\n", This, ref);
 
     return ref;
 }
 
-static ULONG WINAPI
-IRichEditOle_fnRelease(IRichEditOle *me)
+static ULONG WINAPI IRichEditOleImpl_fnRelease(IUnknown *iface)
 {
-    IRichEditOleImpl *This = impl_from_IRichEditOle(me);
+    IRichEditOleImpl *This = impl_from_IUnknown(iface);
     ULONG ref = InterlockedDecrement(&This->ref);
 
     TRACE ("%p ref=%u\n", This, ref);
@@ -184,6 +177,44 @@ IRichEditOle_fnRelease(IRichEditOle *me)
     return ref;
 }
 
+static const IUnknownVtbl reo_unk_vtbl =
+{
+    IRichEditOleImpl_fnQueryInterface,
+    IRichEditOleImpl_fnAddRef,
+    IRichEditOleImpl_fnRelease
+};
+
+static inline IRichEditOleImpl *impl_from_IRichEditOle(IRichEditOle *iface)
+{
+    return CONTAINING_RECORD(iface, IRichEditOleImpl, IRichEditOle_iface);
+}
+
+static inline IRichEditOleImpl *impl_from_ITextDocument(ITextDocument *iface)
+{
+    return CONTAINING_RECORD(iface, IRichEditOleImpl, ITextDocument_iface);
+}
+
+static HRESULT WINAPI
+IRichEditOle_fnQueryInterface(IRichEditOle *me, REFIID riid, LPVOID *ppvObj)
+{
+    IRichEditOleImpl *This = impl_from_IRichEditOle(me);
+    return IUnknown_QueryInterface(This->outer_unk, riid, ppvObj);
+}
+
+static ULONG WINAPI
+IRichEditOle_fnAddRef(IRichEditOle *me)
+{
+    IRichEditOleImpl *This = impl_from_IRichEditOle(me);
+    return IUnknown_AddRef(This->outer_unk);
+}
+
+static ULONG WINAPI
+IRichEditOle_fnRelease(IRichEditOle *me)
+{
+    IRichEditOleImpl *This = impl_from_IRichEditOle(me);
+    return IUnknown_Release(This->outer_unk);
+}
+
 static HRESULT WINAPI
 IRichEditOle_fnActivateAs(IRichEditOle *me, REFCLSID rclsid, REFCLSID rclsidAs)
 {
@@ -3856,7 +3887,7 @@ CreateTextSelection(IRichEditOleImpl *reOle)
     return txtSel;
 }
 
-LRESULT CreateIRichEditOle(ME_TextEditor *editor, LPVOID *ppObj)
+LRESULT CreateIRichEditOle(IUnknown *outer_unk, ME_TextEditor *editor, LPVOID *ppObj)
 {
     IRichEditOleImpl *reo;
 
@@ -3864,6 +3895,7 @@ LRESULT CreateIRichEditOle(ME_TextEditor *editor, LPVOID *ppObj)
     if (!reo)
         return 0;
 
+    reo->IUnknown_inner.lpVtbl = &reo_unk_vtbl;
     reo->IRichEditOle_iface.lpVtbl = &revt;
     reo->ITextDocument_iface.lpVtbl = &tdvt;
     reo->ref = 1;
@@ -3882,11 +3914,17 @@ LRESULT CreateIRichEditOle(ME_TextEditor *editor, LPVOID *ppObj)
         return 0;
     }
     TRACE("Created %p\n",reo);
-    *ppObj = reo;
+
     list_init(&reo->rangelist);
     list_init(&reo->fontlist);
     list_init(&reo->paralist);
 
+    if (outer_unk)
+        reo->outer_unk = outer_unk;
+    else
+        reo->outer_unk = &reo->IUnknown_inner;
+    *ppObj = reo;
+
     return 1;
 }
 
-- 
2.1.1

