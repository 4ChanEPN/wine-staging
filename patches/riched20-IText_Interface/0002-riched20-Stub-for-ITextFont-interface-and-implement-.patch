From e230400e6ef35d424d13cbe9cc29e6cd1ffe6fad Mon Sep 17 00:00:00 2001
From: Jactry Zeng <wine@jactry.com>
Date: Mon, 11 Aug 2014 13:51:55 +0800
Subject: riched20: Stub for ITextFont interface and implement
 ITextRange::GetFont and ITextSelection::GetFont.

---
 dlls/riched20/richole.c       | 172 ++++++++++++++++++++++++++++++++++++++++++
 dlls/riched20/tests/richole.c |  93 +++++++++++++++++++++++
 2 files changed, 265 insertions(+)

diff --git a/dlls/riched20/richole.c b/dlls/riched20/richole.c
index e09e771..de70bc3 100644
--- a/dlls/riched20/richole.c
+++ b/dlls/riched20/richole.c
@@ -1960,6 +1960,10 @@ static HRESULT WINAPI TextFont_SetDuplicate(ITextFont *iface, ITextFont *pFont)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, pFont);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -1967,6 +1971,10 @@ static HRESULT WINAPI TextFont_CanChange(ITextFont *iface, LONG *ret)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, ret);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -1974,6 +1982,10 @@ static HRESULT WINAPI TextFont_IsEqual(ITextFont *iface, ITextFont *font, LONG *
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p %p): stub\n", This, font, ret);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2001,6 +2013,10 @@ static HRESULT WINAPI TextFont_GetStyle(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2008,6 +2024,10 @@ static HRESULT WINAPI TextFont_SetStyle(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2015,6 +2035,10 @@ static HRESULT WINAPI TextFont_GetAllCaps(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2022,6 +2046,10 @@ static HRESULT WINAPI TextFont_SetAllCaps(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2029,6 +2057,10 @@ static HRESULT WINAPI TextFont_GetAnimation(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2036,6 +2068,10 @@ static HRESULT WINAPI TextFont_SetAnimation(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2043,6 +2079,10 @@ static HRESULT WINAPI TextFont_GetBackColor(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2050,6 +2090,10 @@ static HRESULT WINAPI TextFont_SetBackColor(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2064,6 +2108,10 @@ static HRESULT WINAPI TextFont_SetBold(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2071,6 +2119,10 @@ static HRESULT WINAPI TextFont_GetEmboss(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2078,6 +2130,10 @@ static HRESULT WINAPI TextFont_SetEmboss(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2092,6 +2148,10 @@ static HRESULT WINAPI TextFont_SetForeColor(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2099,6 +2159,10 @@ static HRESULT WINAPI TextFont_GetHidden(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2106,6 +2170,10 @@ static HRESULT WINAPI TextFont_SetHidden(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2113,6 +2181,10 @@ static HRESULT WINAPI TextFont_GetEngrave(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2120,6 +2192,10 @@ static HRESULT WINAPI TextFont_SetEngrave(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2134,6 +2210,10 @@ static HRESULT WINAPI TextFont_SetItalic(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2141,6 +2221,10 @@ static HRESULT WINAPI TextFont_GetKerning(ITextFont *iface, FLOAT *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2148,6 +2232,10 @@ static HRESULT WINAPI TextFont_SetKerning(ITextFont *iface, FLOAT value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%.2f): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2162,6 +2250,10 @@ static HRESULT WINAPI TextFont_SetLanguageID(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2198,6 +2290,10 @@ static HRESULT WINAPI TextFont_SetName(ITextFont *iface, BSTR value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%s): stub\n", This, debugstr_w(value));
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2205,6 +2301,10 @@ static HRESULT WINAPI TextFont_GetOutline(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2212,6 +2312,10 @@ static HRESULT WINAPI TextFont_SetOutline(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2219,6 +2323,10 @@ static HRESULT WINAPI TextFont_GetPosition(ITextFont *iface, FLOAT *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2226,6 +2334,10 @@ static HRESULT WINAPI TextFont_SetPosition(ITextFont *iface, FLOAT value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%.2f): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2233,6 +2345,10 @@ static HRESULT WINAPI TextFont_GetProtected(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2240,6 +2356,10 @@ static HRESULT WINAPI TextFont_SetProtected(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2247,6 +2367,10 @@ static HRESULT WINAPI TextFont_GetShadow(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2254,6 +2378,10 @@ static HRESULT WINAPI TextFont_SetShadow(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2268,6 +2396,10 @@ static HRESULT WINAPI TextFont_SetSize(ITextFont *iface, FLOAT value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%.2f): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2275,6 +2407,10 @@ static HRESULT WINAPI TextFont_GetSmallCaps(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2282,6 +2418,10 @@ static HRESULT WINAPI TextFont_SetSmallCaps(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2289,6 +2429,10 @@ static HRESULT WINAPI TextFont_GetSpacing(ITextFont *iface, FLOAT *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2296,6 +2440,10 @@ static HRESULT WINAPI TextFont_SetSpacing(ITextFont *iface, FLOAT value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%.2f): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2310,6 +2458,10 @@ static HRESULT WINAPI TextFont_SetStrikeThrough(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2324,6 +2476,10 @@ static HRESULT WINAPI TextFont_SetSubscript(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2338,6 +2494,10 @@ static HRESULT WINAPI TextFont_SetSuperscript(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2352,6 +2512,10 @@ static HRESULT WINAPI TextFont_SetUnderline(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2359,6 +2523,10 @@ static HRESULT WINAPI TextFont_GetWeight(ITextFont *iface, LONG *value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%p): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
@@ -2366,6 +2534,10 @@ static HRESULT WINAPI TextFont_SetWeight(ITextFont *iface, LONG value)
 {
     ITextFontImpl *This = impl_from_ITextFont(iface);
     FIXME("(%p)->(%d): stub\n", This, value);
+
+    if (This->range && !get_range_reole(This->range))
+        return CO_E_RELEASED;
+
     return E_NOTIMPL;
 }
 
diff --git a/dlls/riched20/tests/richole.c b/dlls/riched20/tests/richole.c
index dbd8dd2..8b72a1d 100644
--- a/dlls/riched20/tests/richole.c
+++ b/dlls/riched20/tests/richole.c
@@ -2165,6 +2165,97 @@ static void test_ITextSelection_SetEnd(void)
   release_interfaces(&w, &reOle, &txtDoc, &txtSel);
 }
 
+static void test_ITextRange_GetFont(void)
+{
+  HWND w;
+  IRichEditOle *reOle = NULL;
+  ITextDocument *txtDoc = NULL;
+  ITextRange *txtRge = NULL;
+  ITextFont *txtFont = NULL, *txtFont1 = NULL;
+  HRESULT hres;
+  int first, lim;
+  int refcount;
+  static const CHAR test_text1[] = "TestSomeText";
+  LONG value;
+
+  create_interfaces(&w, &reOle, &txtDoc, NULL);
+  SendMessageA(w, WM_SETTEXT, 0, (LPARAM)test_text1);
+
+  first = 4, lim = 4;
+  ITextDocument_Range(txtDoc, first, lim, &txtRge);
+  refcount = get_refcount((IUnknown *)txtRge);
+  ok(refcount == 1, "got wrong ref count: %d\n", refcount);
+
+  hres = ITextRange_GetFont(txtRge, &txtFont);
+  ok(hres == S_OK, "ITextRange_GetFont\n");
+  refcount = get_refcount((IUnknown *)txtFont);
+  ok(refcount == 1, "got wrong ref count: %d\n", refcount);
+  refcount = get_refcount((IUnknown *)txtRge);
+  ok(refcount == 2, "got wrong ref count: %d\n", refcount);
+
+  hres = ITextRange_GetFont(txtRge, &txtFont1);
+  ok(hres == S_OK, "ITextRange_GetFont\n");
+  ok(txtFont1 != txtFont, "A new pointer should be return\n");
+  refcount = get_refcount((IUnknown *)txtFont1);
+  ok(refcount == 1, "got wrong ref count: %d\n", refcount);
+  ITextFont_Release(txtFont1);
+  refcount = get_refcount((IUnknown *)txtRge);
+  ok(refcount == 2, "got wrong ref count: %d\n", refcount);
+
+  ITextRange_Release(txtRge);
+  release_interfaces(&w, &reOle, &txtDoc, NULL);
+
+  hres = ITextFont_GetOutline(txtFont, &value);
+  ok(hres == CO_E_RELEASED, "ITextFont after ITextDocument destroyed\n");
+
+  ITextFont_Release(txtFont);
+}
+
+static void test_ITextSelection_GetFont(void)
+{
+  HWND w;
+  IRichEditOle *reOle = NULL;
+  ITextDocument *txtDoc = NULL;
+  ITextSelection *txtSel = NULL;
+  ITextFont *txtFont = NULL, *txtFont1 = NULL;
+  HRESULT hres;
+  int first, lim;
+  int refcount;
+  static const CHAR test_text1[] = "TestSomeText";
+  LONG value;
+
+  create_interfaces(&w, &reOle, &txtDoc, &txtSel);
+  SendMessageA(w, WM_SETTEXT, 0, (LPARAM)test_text1);
+
+  first = 4, lim = 4;
+  SendMessageA(w, EM_SETSEL, first, lim);
+  refcount = get_refcount((IUnknown *)txtSel);
+  ok(refcount == 2, "got wrong ref count: %d\n", refcount);
+
+  hres = ITextSelection_GetFont(txtSel, &txtFont);
+  ok(hres == S_OK, "ITextSelection_GetFont\n");
+  refcount = get_refcount((IUnknown *)txtFont);
+  ok(refcount == 1, "got wrong ref count: %d\n", refcount);
+  refcount = get_refcount((IUnknown *)txtSel);
+  ok(refcount == 3, "got wrong ref count: %d\n", refcount);
+
+  hres = ITextSelection_GetFont(txtSel, &txtFont1);
+  ok(hres == S_OK, "ITextSelection_GetFont\n");
+  ok(txtFont1 != txtFont, "A new pointer should be return\n");
+  refcount = get_refcount((IUnknown *)txtFont1);
+  ok(refcount == 1, "got wrong ref count: %d\n", refcount);
+  ITextFont_Release(txtFont1);
+  refcount = get_refcount((IUnknown *)txtSel);
+  ok(refcount == 3, "got wrong ref count: %d\n", refcount);
+
+  release_interfaces(&w, &reOle, &txtDoc, &txtSel);
+
+  hres = ITextFont_GetOutline(txtFont, &value);
+  ok(hres == CO_E_RELEASED, "ITextFont after ITextDocument destroyed\n");
+
+  ITextFont_Release(txtFont);
+}
+
 START_TEST(richole)
 {
   /* Must explicitly LoadLibrary(). The test has no references to functions in
@@ -2180,6 +2271,7 @@ START_TEST(richole)
   test_ITextSelection_SetStart();
   test_ITextSelection_SetEnd();
   test_ITextSelection_Collapse();
+  test_ITextSelection_GetFont();
   test_ITextDocument_Range();
   test_ITextRange_GetChar();
   test_ITextRange_GetStart_GetEnd();
@@ -2187,6 +2279,7 @@ START_TEST(richole)
   test_ITextRange_Collapse();
   test_ITextRange_SetStart();
   test_ITextRange_SetEnd();
+  test_ITextRange_GetFont();
   test_IOleClientSite_QueryInterface();
   test_IOleWindow_GetWindow();
   test_IOleInPlaceSite_GetWindow();
-- 
2.4.0

