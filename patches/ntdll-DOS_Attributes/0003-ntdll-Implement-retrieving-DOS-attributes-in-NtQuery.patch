From aca454765b4a1cd8b7a50761fb0bd9f82043b895 Mon Sep 17 00:00:00 2001
From: "Erich E. Hoover" <erich.e.hoover@gmail.com>
Date: Wed, 20 Aug 2014 16:04:34 -0600
Subject: ntdll: Implement retrieving DOS attributes in
 NtQuery[Full]AttributesFile.

---
 dlls/ntdll/file.c   |   28 ++++++++++++++++++++++++----
 include/wine/port.h |    1 +
 libs/port/xattr.c   |   16 ++++++++++++++++
 3 files changed, 41 insertions(+), 4 deletions(-)

diff --git a/dlls/ntdll/file.c b/dlls/ntdll/file.c
index c8176dd..8b2f398 100644
--- a/dlls/ntdll/file.c
+++ b/dlls/ntdll/file.c
@@ -138,6 +138,26 @@ int fd_get_file_info( int fd, struct stat *st, ULONG *xattr )
     return ret;
 }
 
+int get_file_info( const char *path, struct stat *st, ULONG *xattr )
+{
+    char hexattr[10];
+    int len, ret;
+
+    *xattr = 0;
+    ret = lstat( path, st );
+    if (ret == -1) return ret;
+    if (S_ISLNK( st->st_mode ))
+    {
+        ret = stat( path, st );
+        if (ret == -1) return ret;
+        if (S_ISDIR( st->st_mode )) *xattr |= FILE_ATTRIBUTE_REPARSE_POINT;
+    }
+    len = xattr_get( path, SAMBA_XATTR_DOS_ATTRIB, hexattr, sizeof(hexattr)-1 );
+    if (len == -1) return ret;
+    *xattr |= get_file_xattr( hexattr, len );
+    return ret;
+}
+
 /**************************************************************************
  *                 FILE_CreateFile                    (internal)
  * Open a file.
@@ -2495,9 +2515,9 @@ NTSTATUS WINAPI NtQueryFullAttributesFile( const OBJECT_ATTRIBUTES *attr,
     if (!(status = nt_to_unix_file_name_attr( attr, &unix_name, FILE_OPEN )))
     {
         struct stat st;
-        ULONG xattr = 0;
+        ULONG xattr;
 
-        if (stat( unix_name.Buffer, &st ) == -1)
+        if (get_file_info( unix_name.Buffer, &st, &xattr ) == -1)
             status = FILE_GetNtStatus();
         else if (!S_ISREG(st.st_mode) && !S_ISDIR(st.st_mode))
             status = STATUS_INVALID_INFO_CLASS;
@@ -2538,9 +2558,9 @@ NTSTATUS WINAPI NtQueryAttributesFile( const OBJECT_ATTRIBUTES *attr, FILE_BASIC
     if (!(status = nt_to_unix_file_name_attr( attr, &unix_name, FILE_OPEN )))
     {
         struct stat st;
-        ULONG xattr = 0;
+        ULONG xattr;
 
-        if (stat( unix_name.Buffer, &st ) == -1)
+        if (get_file_info( unix_name.Buffer, &st, &xattr ) == -1)
             status = FILE_GetNtStatus();
         else if (!S_ISREG(st.st_mode) && !S_ISDIR(st.st_mode))
             status = STATUS_INVALID_INFO_CLASS;
diff --git a/include/wine/port.h b/include/wine/port.h
index 715a9e2..7d8ea1a 100644
--- a/include/wine/port.h
+++ b/include/wine/port.h
@@ -373,6 +373,7 @@ extern int _spawnvp(int mode, const char *cmdname, const char * const argv[]);
 #endif
 
 extern int xattr_fget( int filedes, const char *name, void *value, size_t size );
+extern int xattr_get( const char *path, const char *name, void *value, size_t size );
 
 /* Interlocked functions */
 
diff --git a/libs/port/xattr.c b/libs/port/xattr.c
index 8b64867..0d77ce3 100644
--- a/libs/port/xattr.c
+++ b/libs/port/xattr.c
@@ -59,3 +59,19 @@ int xattr_fget( int filedes, const char *name, void *value, size_t size )
     return -1;
 #endif
 }
+
+int xattr_get( const char *path, const char *name, void *value, size_t size )
+{
+    if (!xattr_valid_namespace( name )) return -1;
+#if defined(HAVE_ATTR_XATTR_H)
+    return getxattr( path, name, value, size );
+#elif defined(HAVE_SYS_XATTR_H)
+    return getxattr( path, name, value, size, 0, 0 );
+#elif defined(HAVE_SYS_EXTATTR_H)
+    return extattr_get_file( path, EXTATTR_NAMESPACE_USER, &name[XATTR_USER_PREFIX_LEN],
+                             value, size );
+#else
+    errno = ENOTSUP;
+    return -1;
+#endif
+}
-- 
1.7.9.5

