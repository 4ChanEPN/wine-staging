From c67d3ad3788845c39b39c3762b47133f1211afd6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Wed, 29 Mar 2017 03:05:05 +0200
Subject: wininet: Return failure when handling http redirect without hostname.

---
 dlls/wininet/tests/http.c | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/dlls/wininet/tests/http.c b/dlls/wininet/tests/http.c
index 528239c50bd..1d6b0262f2c 100644
--- a/dlls/wininet/tests/http.c
+++ b/dlls/wininet/tests/http.c
@@ -2111,6 +2111,12 @@ static const char ok_with_length2[] =
 "Content-Length: 19\r\n\r\n"
 "HTTP/1.1 211 OK\r\n\r\n";
 
+static const char redir_no_host[] =
+"HTTP/1.1 302 Found\r\n"
+"Location: http:///test1\r\n"
+"Server: winetest\r\n"
+"\r\n";
+
 struct server_info {
     HANDLE hEvent;
     int port;
@@ -2521,6 +2527,10 @@ static DWORD CALLBACK server_thread(LPVOID param)
             else
                 send(c, noauthmsg, sizeof noauthmsg-1, 0);
         }
+        if (strstr(buffer, "GET /test_redirect_no_host"))
+        {
+            send(c, redir_no_host, sizeof redir_no_host-1, 0);
+        }
         shutdown(c, 2);
         closesocket(c);
         c = -1;
@@ -5584,6 +5594,27 @@ static void test_remove_dot_segments(int port)
     close_request(&req);
 }
 
+static void test_redirect_no_host(int port)
+{
+    test_request_t req;
+    BOOL ret;
+
+    open_simple_request(&req, "localhost", port, NULL, "/test_redirect_no_host");
+    ret = HttpSendRequestA(req.request, NULL, 0, NULL, 0);
+    if (ret)
+    {
+        trace("Succeeded with status code 302\n");
+        test_status_code(req.request, 302);
+    }
+    else
+    {
+        trace("Failed with error ERROR_INTERNET_INVALID_URL\n");
+        ok(GetLastError() == ERROR_INTERNET_INVALID_URL,
+           "Expected error ERROR_INTERNET_INVALID_URL, got %u\n", GetLastError());
+    }
+    close_request(&req);
+}
+
 static void test_http_connection(void)
 {
     struct server_info si;
@@ -5638,6 +5669,7 @@ static void test_http_connection(void)
     test_long_url(si.port);
     test_redirect(si.port);
     test_remove_dot_segments(si.port);
+    test_redirect_no_host(si.port);
 
     /* send the basic request again to shutdown the server thread */
     test_basic_request(si.port, "GET", "/quit");
-- 
2.13.1

