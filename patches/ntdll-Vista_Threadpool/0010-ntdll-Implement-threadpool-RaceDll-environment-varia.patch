From 3080d2d1a5526d61c02efee05d8804611f860976 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Wed, 4 Mar 2015 07:07:07 +0100
Subject: ntdll: Implement threadpool RaceDll environment variable.

---
 dlls/ntdll/threadpool2.c | 11 +++++++++++
 1 file changed, 11 insertions(+)

diff --git a/dlls/ntdll/threadpool2.c b/dlls/ntdll/threadpool2.c
index d9e08ac..a5203f0 100644
--- a/dlls/ntdll/threadpool2.c
+++ b/dlls/ntdll/threadpool2.c
@@ -83,6 +83,7 @@ struct threadpool_object
     PVOID                   userdata;
     PTP_CLEANUP_GROUP_CANCEL_CALLBACK group_cancel_callback;
     PTP_SIMPLE_CALLBACK     finalization_callback;
+    HMODULE                 race_dll;
     /* information about the group, locked via .group->cs */
     struct list             group_entry;
     BOOL                    is_group_member;
@@ -330,6 +331,7 @@ static void tp_object_initialize( struct threadpool_object *object, struct threa
     object->userdata                = userdata;
     object->group_cancel_callback   = NULL;
     object->finalization_callback   = NULL;
+    object->race_dll                = NULL;
 
     memset( &object->group_entry, 0, sizeof(object->group_entry) );
     object->is_group_member         = FALSE;
@@ -347,10 +349,15 @@ static void tp_object_initialize( struct threadpool_object *object, struct threa
         object->group = impl_from_TP_CLEANUP_GROUP( environment->CleanupGroup );
         object->group_cancel_callback   = environment->CleanupGroupCancelCallback;
         object->finalization_callback   = environment->FinalizationCallback;
+        object->race_dll                = environment->RaceDll;
 
         WARN("environment not fully implemented yet\n");
     }
 
+    /* Increase dll refcount */
+    if (object->race_dll)
+        LdrAddRefDll( 0, object->race_dll );
+
     /* Increase reference-count on the pool */
     interlocked_inc( &pool->refcount );
 
@@ -555,6 +562,10 @@ static BOOL tp_object_release( struct threadpool_object *object )
     /* release reference to threadpool */
     tp_threadpool_release( object->pool );
 
+    /* release reference to library */
+    if (object->race_dll)
+        LdrUnloadDll( object->race_dll );
+
     RtlFreeHeap( GetProcessHeap(), 0, object );
     return TRUE;
 }
-- 
2.3.0

