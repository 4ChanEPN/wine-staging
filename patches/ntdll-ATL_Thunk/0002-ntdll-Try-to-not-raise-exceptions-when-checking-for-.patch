From 280ec71a219496224a2269c23480e6b1b0af3cb6 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Sat, 11 Oct 2014 02:04:27 +0200
Subject: ntdll: Try to not raise exceptions when checking for ATL thunks.

Original patch by Markus Amsler.
---
 dlls/kernel32/tests/virtual.c | 1 -
 dlls/ntdll/signal_i386.c      | 7 +++++++
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/dlls/kernel32/tests/virtual.c b/dlls/kernel32/tests/virtual.c
index 7ecd54d..6d05eef 100644
--- a/dlls/kernel32/tests/virtual.c
+++ b/dlls/kernel32/tests/virtual.c
@@ -2070,7 +2070,6 @@ static void test_atl_thunk_emulation( ULONG dep_flags )
             pRtlRemoveVectoredExceptionHandler(vectored_handler);
 
             ok( ret == 43, "call returned wrong result, expected 43, got %d\n", ret );
-            todo_wine
             ok( num_execute_fault_calls == 1, "expected one STATUS_ACCESS_VIOLATION exception, got %d exceptions\n", num_execute_fault_calls );
         }
         else
diff --git a/dlls/ntdll/signal_i386.c b/dlls/ntdll/signal_i386.c
index 7f01554..48212ba 100644
--- a/dlls/ntdll/signal_i386.c
+++ b/dlls/ntdll/signal_i386.c
@@ -1633,10 +1633,17 @@ struct atl_thunk
 static BOOL check_atl_thunk( EXCEPTION_RECORD *rec, CONTEXT *context )
 {
     const struct atl_thunk *thunk = (const struct atl_thunk *)rec->ExceptionInformation[1];
+    MEMORY_BASIC_INFORMATION mbi;
+    NTSTATUS status;
     BOOL ret = FALSE;
 
     if (!virtual_is_valid_code_address( thunk, sizeof(*thunk) )) return FALSE;
 
+    /* Try to avoid exceptions, to not confuse debuggers / vectored handlers. */
+    status = NtQueryVirtualMemory( NtCurrentProcess(), thunk, 0, &mbi, sizeof(mbi), NULL );
+    if (status != STATUS_SUCCESS || (mbi.Protect & PAGE_NOACCESS))
+        return FALSE;
+
     __TRY
     {
         if (thunk->movl == 0x042444c7 && thunk->jmp == 0xe9)
-- 
2.1.2

