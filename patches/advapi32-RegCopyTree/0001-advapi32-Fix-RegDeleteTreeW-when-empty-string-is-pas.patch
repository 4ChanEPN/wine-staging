From 95113550630cf847fdc52c5ded8ad1d6c84c6149 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Tue, 1 Mar 2016 13:20:07 +0100
Subject: advapi32: Fix RegDeleteTreeW when empty string is passed.

---
 dlls/advapi32/registry.c       |  6 +++---
 dlls/advapi32/tests/registry.c | 14 ++++++++++++++
 2 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/dlls/advapi32/registry.c b/dlls/advapi32/registry.c
index 172423b..aa451b1 100644
--- a/dlls/advapi32/registry.c
+++ b/dlls/advapi32/registry.c
@@ -3030,7 +3030,7 @@ LSTATUS WINAPI RegDeleteTreeW( HKEY hkey, const WCHAR *subkey )
 
     TRACE( "(%p, %s)\n", hkey, debugstr_w(subkey) );
 
-    if (subkey)
+    if (subkey && *subkey)
     {
         ret = RegOpenKeyExW( hkey, subkey, 0, KEY_READ, &hkey );
         if (ret) return ret;
@@ -3060,7 +3060,7 @@ LSTATUS WINAPI RegDeleteTreeW( HKEY hkey, const WCHAR *subkey )
     }
 
     /* Delete the key itself */
-    if (subkey)
+    if (subkey && *subkey)
     {
         ret = RegDeleteKeyW( hkey, emptyW );
         goto cleanup;
@@ -3081,7 +3081,7 @@ LSTATUS WINAPI RegDeleteTreeW( HKEY hkey, const WCHAR *subkey )
 
 cleanup:
     heap_free( name_buf );
-    if (subkey)
+    if (subkey && *subkey)
         RegCloseKey( hkey );
     return ret;
 }
diff --git a/dlls/advapi32/tests/registry.c b/dlls/advapi32/tests/registry.c
index 4b3b4e9..ddda755 100644
--- a/dlls/advapi32/tests/registry.c
+++ b/dlls/advapi32/tests/registry.c
@@ -2246,6 +2246,20 @@ static void test_reg_delete_tree(void)
     dwsize = MAX_PATH;
     ok(RegQueryValueExA(subkey, "value", NULL, &type, (BYTE *)buffer, &dwsize),
         "Value is still present\n");
+    ret = RegCloseKey(subkey);
+    ok(ret == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got %d\n", ret);
+
+    ret = RegOpenKeyA(hkey_main, "subkey", &subkey);
+    ok(ret == ERROR_SUCCESS, "subkey was deleted\n");
+    ret = pRegDeleteTreeA(subkey, "");
+    ok(ret == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got %d\n", ret);
+    ret = RegCloseKey(subkey);
+    ok(ret == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got %d\n", ret);
+
+    ret = RegOpenKeyA(hkey_main, "subkey", &subkey);
+    ok(ret == ERROR_SUCCESS, "subkey was deleted\n");
+    ret = RegCloseKey(subkey);
+    ok(ret == ERROR_SUCCESS, "Expected ERROR_SUCCESS, got %d\n", ret);
 
     ret = pRegDeleteTreeA(hkey_main, "not-here");
     ok(ret == ERROR_FILE_NOT_FOUND,
-- 
2.7.1

