From 2c0d07adf0da9d822938c5759c052ed0dc7e2b53 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Wed, 5 Nov 2014 00:49:59 +0100
Subject: ole32: Don't process window events when APC calls are queued.

---
 dlls/ole32/compobj.c       | 16 +++++++++++++---
 dlls/ole32/tests/compobj.c |  1 -
 2 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/dlls/ole32/compobj.c b/dlls/ole32/compobj.c
index 1d9b943..f4c3c26 100644
--- a/dlls/ole32/compobj.c
+++ b/dlls/ole32/compobj.c
@@ -4460,9 +4460,19 @@ HRESULT WINAPI CoWaitForMultipleHandles(DWORD dwFlags, DWORD dwTimeout,
 
             TRACE("waiting for rpc completion or window message\n");
 
-            res = MsgWaitForMultipleObjectsEx(cHandles, pHandles,
-                (dwTimeout == INFINITE) ? INFINITE : start_time + dwTimeout - now,
-                QS_SENDMESSAGE | QS_ALLPOSTMESSAGE | QS_PAINT, wait_flags);
+            /* MsgWaitForMultipleObjectsEx will always process Window messages, even when an
+             * APC call is queued. We work around that by checking for APC calls manually first */
+
+            res = WAIT_TIMEOUT;
+
+            if (dwFlags & COWAIT_ALERTABLE)
+                res = WaitForMultipleObjectsEx(cHandles, pHandles,
+                    (dwFlags & COWAIT_WAITALL) != 0, 0, TRUE);
+
+            if (res == WAIT_TIMEOUT)
+                res = MsgWaitForMultipleObjectsEx(cHandles, pHandles,
+                    (dwTimeout == INFINITE) ? INFINITE : start_time + dwTimeout - now,
+                    QS_SENDMESSAGE | QS_ALLPOSTMESSAGE | QS_PAINT, wait_flags);
 
             if (res == WAIT_OBJECT_0 + cHandles)  /* messages available */
             {
diff --git a/dlls/ole32/tests/compobj.c b/dlls/ole32/tests/compobj.c
index 8b864bf..21490ef 100644
--- a/dlls/ole32/tests/compobj.c
+++ b/dlls/ole32/tests/compobj.c
@@ -2233,7 +2233,6 @@ static void test_CoWaitForMultipleHandles(void)
     ok(hr == S_OK, "expected hr S_OK, got 0x%08x\n", hr);
     ok(index == WAIT_IO_COMPLETION, "expected index WAIT_IO_COMPLETION, got %u\n", index);
     success = PeekMessageA(&msg, hWnd, WM_DDE_FIRST, WM_DDE_FIRST, PM_REMOVE);
-    todo_wine
     ok(success, "CoWaitForMultipleHandles unexpectedly pumped messages\n");
 
     /* test with COWAIT_INPUTAVAILABLE
-- 
2.1.3

