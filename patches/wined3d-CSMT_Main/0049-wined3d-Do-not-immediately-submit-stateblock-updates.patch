From 89cc09a36e085038a253e08566bbc170403d058f Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Wed, 8 Feb 2017 12:32:55 +0100
Subject: wined3d: Do not immediately submit stateblock updates.

---
 dlls/wined3d/cs.c | 58 -------------------------------------------------------
 1 file changed, 58 deletions(-)

diff --git a/dlls/wined3d/cs.c b/dlls/wined3d/cs.c
index dc1dfad5207..da20da75a36 100644
--- a/dlls/wined3d/cs.c
+++ b/dlls/wined3d/cs.c
@@ -1000,8 +1000,6 @@ void wined3d_cs_emit_set_predication(struct wined3d_cs *cs, struct wined3d_query
     op->opcode = WINED3D_CS_OP_SET_PREDICATION;
     op->predicate = predicate;
     op->value = value;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_viewport(struct wined3d_cs *cs, const void *data)
@@ -1021,8 +1019,6 @@ void wined3d_cs_emit_set_viewport(struct wined3d_cs *cs, const struct wined3d_vi
     op = cs->ops->require_space(cs, sizeof(*op), 0);
     op->opcode = WINED3D_CS_OP_SET_VIEWPORT;
     op->viewport = *viewport;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_scissor_rect(struct wined3d_cs *cs, const void *data)
@@ -1042,8 +1038,6 @@ void wined3d_cs_emit_set_scissor_rect(struct wined3d_cs *cs, const RECT *rect)
     op = cs->ops->require_space(cs, sizeof(*op), 0);
     op->opcode = WINED3D_CS_OP_SET_SCISSOR_RECT;
     op->rect = *rect;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_rendertarget_view(struct wined3d_cs *cs, const void *data)
@@ -1065,8 +1059,6 @@ void wined3d_cs_emit_set_rendertarget_view(struct wined3d_cs *cs, unsigned int v
     op->opcode = WINED3D_CS_OP_SET_RENDERTARGET_VIEW;
     op->view_idx = view_idx;
     op->view = view;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_depth_stencil_view(struct wined3d_cs *cs, const void *data)
@@ -1115,8 +1107,6 @@ void wined3d_cs_emit_set_depth_stencil_view(struct wined3d_cs *cs, struct wined3
     op = cs->ops->require_space(cs, sizeof(*op), 0);
     op->opcode = WINED3D_CS_OP_SET_DEPTH_STENCIL_VIEW;
     op->view = view;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_vertex_declaration(struct wined3d_cs *cs, const void *data)
@@ -1136,8 +1126,6 @@ void wined3d_cs_emit_set_vertex_declaration(struct wined3d_cs *cs, struct wined3
     op = cs->ops->require_space(cs, sizeof(*op), 0);
     op->opcode = WINED3D_CS_OP_SET_VERTEX_DECLARATION;
     op->declaration = declaration;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_stream_source(struct wined3d_cs *cs, const void *data)
@@ -1173,8 +1161,6 @@ void wined3d_cs_emit_set_stream_source(struct wined3d_cs *cs, UINT stream_idx,
     op->buffer = buffer;
     op->offset = offset;
     op->stride = stride;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_stream_source_freq(struct wined3d_cs *cs, const void *data)
@@ -1200,8 +1186,6 @@ void wined3d_cs_emit_set_stream_source_freq(struct wined3d_cs *cs, UINT stream_i
     op->stream_idx = stream_idx;
     op->frequency = frequency;
     op->flags = flags;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_stream_output(struct wined3d_cs *cs, const void *data)
@@ -1233,8 +1217,6 @@ void wined3d_cs_emit_set_stream_output(struct wined3d_cs *cs, UINT stream_idx,
     op->stream_idx = stream_idx;
     op->buffer = buffer;
     op->offset = offset;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_index_buffer(struct wined3d_cs *cs, const void *data)
@@ -1267,8 +1249,6 @@ void wined3d_cs_emit_set_index_buffer(struct wined3d_cs *cs, struct wined3d_buff
     op->buffer = buffer;
     op->format_id = format_id;
     op->offset = offset;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_constant_buffer(struct wined3d_cs *cs, const void *data)
@@ -1298,8 +1278,6 @@ void wined3d_cs_emit_set_constant_buffer(struct wined3d_cs *cs, enum wined3d_sha
     op->type = type;
     op->cb_idx = cb_idx;
     op->buffer = buffer;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_texture(struct wined3d_cs *cs, const void *data)
@@ -1391,8 +1369,6 @@ void wined3d_cs_emit_set_texture(struct wined3d_cs *cs, UINT stage, struct wined
     op->opcode = WINED3D_CS_OP_SET_TEXTURE;
     op->stage = stage;
     op->texture = texture;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_shader_resource_view(struct wined3d_cs *cs, const void *data)
@@ -1414,8 +1390,6 @@ void wined3d_cs_emit_set_unordered_access_view(struct wined3d_cs *cs, unsigned i
     op->opcode = WINED3D_CS_OP_SET_UNORDERED_ACCESS_VIEW;
     op->view_idx = view_idx;
     op->view = view;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_unordered_access_view(struct wined3d_cs *cs, const void *data)
@@ -1446,8 +1420,6 @@ void wined3d_cs_emit_set_shader_resource_view(struct wined3d_cs *cs, enum wined3
     op->type = type;
     op->view_idx = view_idx;
     op->view = view;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_sampler(struct wined3d_cs *cs, const void *data)
@@ -1470,8 +1442,6 @@ void wined3d_cs_emit_set_sampler(struct wined3d_cs *cs, enum wined3d_shader_type
     op->type = type;
     op->sampler_idx = sampler_idx;
     op->sampler = sampler;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_shader(struct wined3d_cs *cs, const void *data)
@@ -1493,8 +1463,6 @@ void wined3d_cs_emit_set_shader(struct wined3d_cs *cs, enum wined3d_shader_type
     op->opcode = WINED3D_CS_OP_SET_SHADER;
     op->type = type;
     op->shader = shader;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_rasterizer_state(struct wined3d_cs *cs, const void *data)
@@ -1515,8 +1483,6 @@ void wined3d_cs_emit_set_rasterizer_state(struct wined3d_cs *cs,
     op = cs->ops->require_space(cs, sizeof(*op), 0);
     op->opcode = WINED3D_CS_OP_SET_RASTERIZER_STATE;
     op->state = rasterizer_state;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_render_state(struct wined3d_cs *cs, const void *data)
@@ -1537,8 +1503,6 @@ void wined3d_cs_emit_set_render_state(struct wined3d_cs *cs, enum wined3d_render
     op->opcode = WINED3D_CS_OP_SET_RENDER_STATE;
     op->state = state;
     op->value = value;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_texture_state(struct wined3d_cs *cs, const void *data)
@@ -1561,8 +1525,6 @@ void wined3d_cs_emit_set_texture_state(struct wined3d_cs *cs, UINT stage,
     op->stage = stage;
     op->state = state;
     op->value = value;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_sampler_state(struct wined3d_cs *cs, const void *data)
@@ -1585,8 +1547,6 @@ void wined3d_cs_emit_set_sampler_state(struct wined3d_cs *cs, UINT sampler_idx,
     op->sampler_idx = sampler_idx;
     op->state = state;
     op->value = value;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_transform(struct wined3d_cs *cs, const void *data)
@@ -1609,8 +1569,6 @@ void wined3d_cs_emit_set_transform(struct wined3d_cs *cs, enum wined3d_transform
     op->opcode = WINED3D_CS_OP_SET_TRANSFORM;
     op->state = state;
     op->matrix = *matrix;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_clip_plane(struct wined3d_cs *cs, const void *data)
@@ -1631,8 +1589,6 @@ void wined3d_cs_emit_set_clip_plane(struct wined3d_cs *cs, UINT plane_idx, const
     op->opcode = WINED3D_CS_OP_SET_CLIP_PLANE;
     op->plane_idx = plane_idx;
     op->plane = *plane;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_color_key(struct wined3d_cs *cs, const void *data)
@@ -1716,8 +1672,6 @@ void wined3d_cs_emit_set_color_key(struct wined3d_cs *cs, struct wined3d_texture
     }
     else
         op->set = 0;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_material(struct wined3d_cs *cs, const void *data)
@@ -1737,8 +1691,6 @@ void wined3d_cs_emit_set_material(struct wined3d_cs *cs, const struct wined3d_ma
     op = cs->ops->require_space(cs, sizeof(*op), 0);
     op->opcode = WINED3D_CS_OP_SET_MATERIAL;
     op->material = *material;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_reset_state(struct wined3d_cs *cs, const void *data)
@@ -1761,8 +1713,6 @@ void wined3d_cs_emit_reset_state(struct wined3d_cs *cs)
 
     op = cs->ops->require_space(cs, sizeof(*op), 0);
     op->opcode = WINED3D_CS_OP_RESET_STATE;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_destroy_object(struct wined3d_cs *cs, const void *data)
@@ -2021,8 +1971,6 @@ void wined3d_cs_emit_push_constants(struct wined3d_cs *cs, enum wined3d_push_con
     op->start_idx = start_idx;
     op->count = count;
     memcpy(op->constants, constants, count * push_constant_info[p].size);
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_primitive_type(struct wined3d_cs *cs, const void *data)
@@ -2047,8 +1995,6 @@ void wined3d_cs_emit_set_primitive_type(struct wined3d_cs *cs, GLenum primitive_
     op = cs->ops->require_space(cs, sizeof(*op), 0);
     op->opcode = WINED3D_CS_OP_SET_PRIMITIVE_TYPE;
     op->gl_primitive_type = primitive_type;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_light(struct wined3d_cs *cs, const void *data)
@@ -2107,8 +2053,6 @@ void wined3d_cs_emit_set_light(struct wined3d_cs *cs, const struct wined3d_light
     op = cs->ops->require_space(cs, sizeof(*op), 0);
     op->opcode = WINED3D_CS_OP_SET_LIGHT;
     op->light = *light;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_set_light_enable(struct wined3d_cs *cs, const void *data)
@@ -2197,8 +2141,6 @@ void wined3d_cs_emit_set_light_enable(struct wined3d_cs *cs, UINT idx, BOOL enab
     op->opcode = WINED3D_CS_OP_SET_LIGHT_ENABLE;
     op->idx = idx;
     op->enable = enable;
-
-    cs->ops->submit(cs);
 }
 
 static UINT wined3d_cs_exec_blt(struct wined3d_cs *cs, const void *data)
-- 
2.11.0

