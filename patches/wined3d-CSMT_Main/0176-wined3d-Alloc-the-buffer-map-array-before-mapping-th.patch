From 3f00564e2ed6f37b857d0724dea00646285c747c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefan@codeweavers.com>
Date: Fri, 28 Aug 2015 01:13:32 +0200
Subject: wined3d: Alloc the buffer map array before mapping the buffer.

FIXME: This needs to go into whatever patch creates the VBO on first map.
---
 dlls/wined3d/buffer.c | 21 +++++++++++----------
 1 file changed, 11 insertions(+), 10 deletions(-)

diff --git a/dlls/wined3d/buffer.c b/dlls/wined3d/buffer.c
index 6995264..753e38c 100644
--- a/dlls/wined3d/buffer.c
+++ b/dlls/wined3d/buffer.c
@@ -1250,6 +1250,16 @@ static HRESULT buffer_init(struct wined3d_buffer *buffer, struct wined3d_device
         buffer->flags |= WINED3D_BUFFER_CREATEBO;
     }
 
+    buffer->maps = HeapAlloc(GetProcessHeap(), 0, sizeof(*buffer->maps));
+    if (!buffer->maps)
+    {
+        ERR("Out of memory\n");
+        buffer_unload(&buffer->resource);
+        resource_cleanup(&buffer->resource);
+        return E_OUTOFMEMORY;
+    }
+    buffer->maps_size = 1;
+
     if (data)
     {
         BYTE *ptr;
@@ -1258,6 +1268,7 @@ static HRESULT buffer_init(struct wined3d_buffer *buffer, struct wined3d_device
         if (FAILED(hr))
         {
             ERR("Failed to map buffer, hr %#x\n", hr);
+            HeapFree(GetProcessHeap(), 0, buffer->maps);
             buffer_unload(&buffer->resource);
             resource_cleanup(&buffer->resource);
             return hr;
@@ -1268,16 +1279,6 @@ static HRESULT buffer_init(struct wined3d_buffer *buffer, struct wined3d_device
         wined3d_buffer_unmap(buffer);
     }
 
-    buffer->maps = HeapAlloc(GetProcessHeap(), 0, sizeof(*buffer->maps));
-    if (!buffer->maps)
-    {
-        ERR("Out of memory\n");
-        buffer_unload(&buffer->resource);
-        resource_cleanup(&buffer->resource);
-        return E_OUTOFMEMORY;
-    }
-    buffer->maps_size = 1;
-
     if (wined3d_settings.cs_multithreaded)
         buffer->flags |= WINED3D_BUFFER_DOUBLEBUFFER;
 
-- 
2.5.1

