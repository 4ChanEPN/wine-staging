From 4e9409d9486ec3598e513f6f5a4a7f1188eb55c6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Sat, 18 Feb 2017 00:45:39 +0100
Subject: wined3d: Don't wait for events that have not been issued yet.

---
 dlls/d3d10core/tests/device.c  | 2 --
 dlls/d3d11/tests/d3d11.c       | 2 --
 dlls/wined3d/cs.c              | 4 ++++
 dlls/wined3d/query.c           | 6 +++++-
 dlls/wined3d/wined3d_private.h | 1 +
 5 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/dlls/d3d10core/tests/device.c b/dlls/d3d10core/tests/device.c
index a4b6355d6b9..7b27d9f6a4c 100644
--- a/dlls/d3d10core/tests/device.c
+++ b/dlls/d3d10core/tests/device.c
@@ -7821,7 +7821,6 @@ float4 main(const ps_in v) : SV_TARGET
         ID3D10Device_Draw(device, 4, 0);
 
         color = get_texture_color(test_context.backbuffer, 319, 239);
-        todo_wine_if(test_data[i].index == 1)
         ok(compare_color(color, test_data[i].expected, 1),
                 "Got unexpected color 0x%08x for index %d.\n", color, test_data[i].index);
     }
@@ -9990,7 +9989,6 @@ static void test_line_antialiasing_blending(void)
 
     ID3D10Device_ClearRenderTargetView(device, test_context.backbuffer_rtv, &green.x);
     draw_color_quad(&test_context, &red);
-    todo_wine
     check_texture_color(test_context.backbuffer, 0xe2007fcc, 1);
 
     ID3D10Device_OMSetBlendState(device, NULL, NULL, D3D10_DEFAULT_SAMPLE_MASK);
diff --git a/dlls/d3d11/tests/d3d11.c b/dlls/d3d11/tests/d3d11.c
index bcaa5df3f39..4ebb82d98de 100644
--- a/dlls/d3d11/tests/d3d11.c
+++ b/dlls/d3d11/tests/d3d11.c
@@ -9776,7 +9776,6 @@ float4 main(const ps_in v) : SV_TARGET
         ID3D11DeviceContext_UpdateSubresource(context, (ID3D11Resource *)index_cb, 0, NULL, &index, 0, 0);
 
         draw_quad(&test_context);
-        todo_wine_if(test_data[i].index == 1)
         check_texture_color(test_context.backbuffer, test_data[i].expected, 1);
     }
 
@@ -12028,7 +12027,6 @@ static void test_line_antialiasing_blending(void)
 
     ID3D11DeviceContext_ClearRenderTargetView(context, test_context.backbuffer_rtv, &green.x);
     draw_color_quad(&test_context, &red);
-    todo_wine
     check_texture_color(test_context.backbuffer, 0xe2007fcc, 1);
 
     ID3D11DeviceContext_OMSetBlendState(context, NULL, NULL, D3D11_DEFAULT_SAMPLE_MASK);
diff --git a/dlls/wined3d/cs.c b/dlls/wined3d/cs.c
index 41167f49ace..fba963f045d 100644
--- a/dlls/wined3d/cs.c
+++ b/dlls/wined3d/cs.c
@@ -1641,11 +1641,15 @@ static UINT wined3d_cs_exec_query_issue(struct wined3d_cs *cs, const void *data)
 {
     const struct wined3d_cs_query_issue *op = data;
     struct wined3d_query *query = op->query;
+    struct wined3d_context *context;
 
     query->query_ops->query_issue(query, op->flags);
 
     InterlockedDecrement(&query->pending);
 
+    if (query->flush && (context = context_get_current()))
+        context->gl_info->gl_ops.gl.p_glFlush();
+
     return sizeof(*op);
 }
 
diff --git a/dlls/wined3d/query.c b/dlls/wined3d/query.c
index 2db6fa8c10d..d6264cec01b 100644
--- a/dlls/wined3d/query.c
+++ b/dlls/wined3d/query.c
@@ -351,8 +351,12 @@ HRESULT CDECL wined3d_query_get_data(struct wined3d_query *query,
         return WINED3DERR_INVALIDCALL;
     }
 
-    while (InterlockedCompareExchange(&query->pending, 0, 0));
+    if (flags & WINED3DGETDATA_FLUSH)
+        query->flush = TRUE;
+    if (InterlockedCompareExchange(&query->pending, 0, 0))
+        return S_FALSE;
 
+    query->flush = FALSE;
     if (!wined3d_cs_emit_query_poll(query->device->cs, query, flags))
         return S_FALSE;
 
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index 10a7b4a8660..7462a3382ca 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -1501,6 +1501,7 @@ struct wined3d_query
     DWORD data_size;
     const struct wined3d_query_ops *query_ops;
     LONG pending;
+    BOOL flush;
 };
 
 union wined3d_gl_query_object
-- 
2.11.0

