From f63385f0d8260f11819bad1b075af20c98bb3bd4 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefan@codeweavers.com>
Date: Wed, 2 Oct 2013 22:38:51 +0200
Subject: wined3d: Clean up resource data through the CS.

---
 dlls/wined3d/buffer.c  | 7 +++++++
 dlls/wined3d/texture.c | 2 ++
 2 files changed, 9 insertions(+)

diff --git a/dlls/wined3d/buffer.c b/dlls/wined3d/buffer.c
index 86395c4..90a707c 100644
--- a/dlls/wined3d/buffer.c
+++ b/dlls/wined3d/buffer.c
@@ -586,6 +586,9 @@ ULONG CDECL wined3d_buffer_decref(struct wined3d_buffer *buffer)
         }
 
         resource_cleanup(&buffer->resource);
+        if (wined3d_settings.cs_multithreaded)
+            buffer->resource.device->cs->ops->finish(buffer->resource.device->cs);
+
         buffer->resource.parent_ops->wined3d_object_destroyed(buffer->resource.parent);
         HeapFree(GetProcessHeap(), 0, buffer->maps);
         HeapFree(GetProcessHeap(), 0, buffer);
@@ -1355,6 +1358,8 @@ static HRESULT buffer_init(struct wined3d_buffer *buffer, struct wined3d_device
         ERR("Out of memory.\n");
         buffer_unload(&buffer->resource);
         resource_cleanup(&buffer->resource);
+        if (wined3d_settings.cs_multithreaded)
+            buffer->resource.device->cs->ops->finish(buffer->resource.device->cs);
         return E_OUTOFMEMORY;
     }
     buffer->maps_size = 1;
@@ -1365,6 +1370,8 @@ static HRESULT buffer_init(struct wined3d_buffer *buffer, struct wined3d_device
         buffer_unload(&buffer->resource);
         resource_cleanup(&buffer->resource);
         HeapFree(GetProcessHeap(), 0, buffer->maps);
+        if (wined3d_settings.cs_multithreaded)
+            buffer->resource.device->cs->ops->finish(buffer->resource.device->cs);
         return hr;
     }
 
diff --git a/dlls/wined3d/texture.c b/dlls/wined3d/texture.c
index d810267..53dfea6 100644
--- a/dlls/wined3d/texture.c
+++ b/dlls/wined3d/texture.c
@@ -521,6 +521,8 @@ static void wined3d_texture_cleanup(struct wined3d_texture *texture)
     texture->texture_ops->texture_cleanup_sub_resources(texture);
     wined3d_texture_unload_gl_texture(texture);
     resource_cleanup(&texture->resource);
+    if (wined3d_settings.cs_multithreaded)
+        texture->resource.device->cs->ops->finish(texture->resource.device->cs);
 }
 
 void wined3d_texture_set_swapchain(struct wined3d_texture *texture, struct wined3d_swapchain *swapchain)
-- 
2.8.0

