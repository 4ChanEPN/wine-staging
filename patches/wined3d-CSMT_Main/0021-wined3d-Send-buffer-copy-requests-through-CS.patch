From 3bf5f63ec62c705afb14d485df3e2d0bd799d7dd Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Tue, 7 Feb 2017 14:37:07 +0100
Subject: wined3d: Send buffer copy requests through CS.

---
 dlls/wined3d/cs.c              | 44 ++++++++++++++++++++++++++++++++++++++++++
 dlls/wined3d/device.c          |  8 ++++----
 dlls/wined3d/wined3d_private.h |  3 +++
 3 files changed, 51 insertions(+), 4 deletions(-)

diff --git a/dlls/wined3d/cs.c b/dlls/wined3d/cs.c
index be7e041b86c..51ac0c2b000 100644
--- a/dlls/wined3d/cs.c
+++ b/dlls/wined3d/cs.c
@@ -75,6 +75,7 @@ enum wined3d_cs_op
     WINED3D_CS_OP_RELEASE_DC,
     WINED3D_CS_OP_UPDATE_SWAP_INTERVAL,
     WINED3D_CS_OP_TEXTURE_ADD_DIRTY_REGION,
+    WINED3D_CS_OP_BUFFER_COPY,
 };
 
 struct wined3d_cs_sync
@@ -443,6 +444,16 @@ struct wined3d_cs_texture_add_dirty_region
     unsigned int sub_resource_idx;
 };
 
+struct wined3d_cs_buffer_copy
+{
+    enum wined3d_cs_op opcode;
+    struct wined3d_buffer *dst_buffer;
+    unsigned int dst_offset;
+    struct wined3d_buffer *src_buffer;
+    unsigned int src_offset;
+    unsigned int size;
+};
+
 static void wined3d_cs_exec_sync(struct wined3d_cs *cs, const void *data)
 {
 }
@@ -2150,6 +2161,38 @@ void wined3d_cs_emit_texture_add_dirty_region(struct wined3d_cs *cs,
     cs->ops->submit(cs);
 }
 
+static void wined3d_cs_exec_buffer_copy(struct wined3d_cs *cs, const void *data)
+{
+    const struct wined3d_cs_buffer_copy *op = data;
+    HRESULT hr;
+
+    if (FAILED(hr = wined3d_buffer_copy(op->dst_buffer, op->dst_offset, op->src_buffer, op->src_offset, op->size)))
+        ERR("Failed to copy buffer, hr %#x.\n", hr);
+
+    wined3d_resource_release(&op->dst_buffer->resource);
+    wined3d_resource_release(&op->src_buffer->resource);
+}
+
+void wined3d_cs_emit_buffer_copy(struct wined3d_cs *cs, struct wined3d_buffer *dst_buffer,
+        unsigned int dst_offset, struct wined3d_buffer *src_buffer, unsigned int src_offset,
+        unsigned int size)
+{
+    struct wined3d_cs_buffer_copy *op;
+
+    op = cs->ops->require_space(cs, sizeof(*op));
+    op->opcode = WINED3D_CS_OP_BUFFER_COPY;
+    op->dst_buffer = dst_buffer;
+    op->dst_offset = dst_offset;
+    op->src_buffer = src_buffer;
+    op->src_offset = src_offset;
+    op->size = size;
+
+    wined3d_resource_acquire(&dst_buffer->resource);
+    wined3d_resource_acquire(&src_buffer->resource);
+
+    cs->ops->submit(cs);
+}
+
 static void (* const wined3d_cs_op_handlers[])(struct wined3d_cs *cs, const void *data) =
 {
     /* WINED3D_CS_OP_SYNC                       */ wined3d_cs_exec_sync,
@@ -2201,6 +2244,7 @@ static void (* const wined3d_cs_op_handlers[])(struct wined3d_cs *cs, const void
     /* WINED3D_CS_OP_RELEASE_DC                 */ wined3d_cs_exec_release_dc,
     /* WINED3D_CS_OP_UPDATE_SWAP_INTERVAL       */ wined3d_cs_exec_update_swap_interval,
     /* WINED3D_CS_OP_TEXTURE_ADD_DIRTY_REGION   */ wined3d_cs_exec_texture_add_dirty_region,
+    /* WINED3D_CS_OP_BUFFER_COPY                */ wined3d_cs_exec_buffer_copy,
 };
 
 static void *wined3d_cs_st_require_space(struct wined3d_cs *cs, size_t size)
diff --git a/dlls/wined3d/device.c b/dlls/wined3d/device.c
index 749ba9ca19c..a8ca7cbaf56 100644
--- a/dlls/wined3d/device.c
+++ b/dlls/wined3d/device.c
@@ -3991,10 +3991,9 @@ void CDECL wined3d_device_copy_resource(struct wined3d_device *device,
 
     if (dst_resource->type == WINED3D_RTYPE_BUFFER)
     {
-        if (FAILED(hr = wined3d_buffer_copy(buffer_from_resource(dst_resource), 0,
+        wined3d_cs_emit_buffer_copy(device->cs, buffer_from_resource(dst_resource), 0,
                 buffer_from_resource(src_resource), 0,
-                dst_resource->size)))
-            ERR("Failed to copy buffer, hr %#x.\n", hr);
+                dst_resource->size);
         return;
     }
 
@@ -4116,8 +4115,9 @@ HRESULT CDECL wined3d_device_copy_sub_resource_region(struct wined3d_device *dev
             return WINED3DERR_INVALIDCALL;
         }
 
-        return wined3d_buffer_copy(buffer_from_resource(dst_resource), dst_x,
+        wined3d_cs_emit_buffer_copy(device->cs, buffer_from_resource(dst_resource), dst_x,
                 buffer_from_resource(src_resource), src_offset, size);
+        return WINED3D_OK;
     }
 
     if (dst_resource->type != WINED3D_RTYPE_TEXTURE_2D)
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index d45c45c09dc..708091f573b 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -3239,6 +3239,9 @@ void wined3d_cs_emit_blt(struct wined3d_cs *cs, struct wined3d_surface *dst_surf
         const RECT *dst_rect, struct wined3d_surface *src_surface,
         const RECT *src_rect, DWORD flags, const struct wined3d_blt_fx *fx,
         enum wined3d_texture_filter_type filter) DECLSPEC_HIDDEN;
+void wined3d_cs_emit_buffer_copy(struct wined3d_cs *cs, struct wined3d_buffer *dst_buffer,
+        unsigned int dst_offset, struct wined3d_buffer *src_buffer, unsigned int src_offset,
+        unsigned int size) DECLSPEC_HIDDEN;
 void wined3d_cs_emit_clear(struct wined3d_cs *cs, DWORD rect_count, const RECT *rects,
         DWORD flags, const struct wined3d_color *color, float depth, DWORD stencil) DECLSPEC_HIDDEN;
 void wined3d_cs_emit_clear_rtv(struct wined3d_cs *cs, struct wined3d_rendertarget_view *view,
-- 
2.11.0

