From ad964ed3cc6b945656cd04d1224503feeb520683 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Tue, 1 Nov 2016 15:07:01 +0100
Subject: Revert "wined3d: Introduce wined3d_buffer_prepapre_location()."

This reverts commit 171e272f852465e1d015c79f0ebc632e4643f873.
---
 dlls/wined3d/buffer.c | 30 ++----------------------------
 1 file changed, 2 insertions(+), 28 deletions(-)

diff --git a/dlls/wined3d/buffer.c b/dlls/wined3d/buffer.c
index fdd7e3b..e119fa6 100644
--- a/dlls/wined3d/buffer.c
+++ b/dlls/wined3d/buffer.c
@@ -538,32 +538,6 @@ ULONG CDECL wined3d_buffer_incref(struct wined3d_buffer *buffer)
     return refcount;
 }
 
-static BOOL wined3d_buffer_prepare_location(struct wined3d_buffer *buffer,
-        struct wined3d_context *context, DWORD location)
-{
-    switch (location)
-    {
-        case WINED3D_LOCATION_SYSMEM:
-            if (buffer->resource.heap_memory)
-                return TRUE;
-
-            if (!wined3d_resource_allocate_sysmem(&buffer->resource))
-            {
-                ERR("Failed to allocate system memory.\n");
-                return FALSE;
-            }
-            return TRUE;
-
-        case WINED3D_LOCATION_BUFFER:
-            FIXME("Not implemented yet.\n");
-            return FALSE;
-
-        default:
-            ERR("Invalid location %s.\n", wined3d_debug_location(location));
-            return FALSE;
-    }
-}
-
 /* Context activation is done by the caller. */
 BYTE *wined3d_buffer_load_sysmem(struct wined3d_buffer *buffer, struct wined3d_context *context)
 {
@@ -573,8 +547,8 @@ BYTE *wined3d_buffer_load_sysmem(struct wined3d_buffer *buffer, struct wined3d_c
     if (buffer->resource.heap_memory)
         return buffer->resource.heap_memory;
 
-    if (!wined3d_buffer_prepare_location(buffer, context, WINED3D_LOCATION_SYSMEM))
-        return NULL;
+    if (!wined3d_resource_allocate_sysmem(&buffer->resource))
+        ERR("Failed to allocate system memory.\n");
 
     buffer_bind(buffer, context);
     GL_EXTCALL(glGetBufferSubData(buffer->buffer_type_hint, 0, buffer->resource.size, buffer->resource.heap_memory));
-- 
2.9.0

