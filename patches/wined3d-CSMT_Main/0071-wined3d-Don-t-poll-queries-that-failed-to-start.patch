From 1b670fb5de110f6e498aa9f86112be78752569b2 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefan@codeweavers.com>
Date: Wed, 24 Jul 2013 17:27:35 +0200
Subject: wined3d: Don't poll queries that failed to start

---
 dlls/wined3d/cs.c              |  5 +++--
 dlls/wined3d/query.c           | 28 +++++++++++++++++++++-------
 dlls/wined3d/wined3d_private.h |  2 +-
 3 files changed, 25 insertions(+), 10 deletions(-)

diff --git a/dlls/wined3d/cs.c b/dlls/wined3d/cs.c
index 68a5c3a6fcf..35b0ce2e7b9 100644
--- a/dlls/wined3d/cs.c
+++ b/dlls/wined3d/cs.c
@@ -1734,10 +1734,11 @@ static UINT wined3d_cs_exec_query_issue(struct wined3d_cs *cs, const void *data)
 {
     const struct wined3d_cs_query_issue *op = data;
     struct wined3d_query *query = op->query;
+    BOOL poll;
 
-    query->query_ops->query_issue(query, op->flags);
+    poll = query->query_ops->query_issue(query, op->flags);
 
-    if (wined3d_settings.cs_multithreaded && op->flags & WINED3DISSUE_END
+    if (wined3d_settings.cs_multithreaded && poll
             && list_empty(&query->poll_list_entry))
         list_add_tail(&cs->query_poll_list, &query->poll_list_entry);
 
diff --git a/dlls/wined3d/query.c b/dlls/wined3d/query.c
index b86a336ec48..8f8fe113fbe 100644
--- a/dlls/wined3d/query.c
+++ b/dlls/wined3d/query.c
@@ -483,7 +483,7 @@ enum wined3d_query_type CDECL wined3d_query_get_type(const struct wined3d_query
     return query->type;
 }
 
-static void wined3d_event_query_ops_issue(struct wined3d_query *query, DWORD flags)
+static BOOL wined3d_event_query_ops_issue(struct wined3d_query *query, DWORD flags)
 {
     TRACE("query %p, flags %#x.\n", query, flags);
 
@@ -492,20 +492,23 @@ static void wined3d_event_query_ops_issue(struct wined3d_query *query, DWORD fla
         struct wined3d_event_query *event_query = wined3d_event_query_from_query(query);
 
         wined3d_event_query_issue(event_query, query->device);
+        return TRUE;
     }
     else if (flags & WINED3DISSUE_BEGIN)
     {
         /* Started implicitly at query creation. */
         ERR("Event query issued with START flag - what to do?\n");
     }
+    return FALSE;
 }
 
-static void wined3d_occlusion_query_ops_issue(struct wined3d_query *query, DWORD flags)
+static BOOL wined3d_occlusion_query_ops_issue(struct wined3d_query *query, DWORD flags)
 {
     struct wined3d_occlusion_query *oq = wined3d_occlusion_query_from_query(query);
     struct wined3d_device *device = query->device;
     const struct wined3d_gl_info *gl_info = &device->adapter->gl_info;
     struct wined3d_context *context;
+    BOOL poll = FALSE;
 
     TRACE("query %p, flags %#x.\n", query, flags);
 
@@ -567,7 +570,10 @@ static void wined3d_occlusion_query_ops_issue(struct wined3d_query *query, DWORD
             }
         }
         oq->started = FALSE;
+        poll = TRUE;
     }
+
+    return poll;
 }
 
 static BOOL wined3d_timestamp_query_ops_poll(struct wined3d_query *query, DWORD flags)
@@ -608,7 +614,7 @@ static BOOL wined3d_timestamp_query_ops_poll(struct wined3d_query *query, DWORD
     return available;
 }
 
-static void wined3d_timestamp_query_ops_issue(struct wined3d_query *query, DWORD flags)
+static BOOL wined3d_timestamp_query_ops_issue(struct wined3d_query *query, DWORD flags)
 {
     struct wined3d_timestamp_query *tq = wined3d_timestamp_query_from_query(query);
     const struct wined3d_gl_info *gl_info;
@@ -631,6 +637,10 @@ static void wined3d_timestamp_query_ops_issue(struct wined3d_query *query, DWORD
         checkGLcall("glQueryCounter()");
         context_release(context);
     }
+
+    if (flags & WINED3DISSUE_END)
+        return TRUE;
+    return FALSE;
 }
 
 static BOOL wined3d_timestamp_disjoint_query_ops_poll(struct wined3d_query *query, DWORD flags)
@@ -640,9 +650,10 @@ static BOOL wined3d_timestamp_disjoint_query_ops_poll(struct wined3d_query *quer
     return TRUE;
 }
 
-static void wined3d_timestamp_disjoint_query_ops_issue(struct wined3d_query *query, DWORD flags)
+static BOOL wined3d_timestamp_disjoint_query_ops_issue(struct wined3d_query *query, DWORD flags)
 {
     TRACE("query %p, flags %#x.\n", query, flags);
+    return FALSE;
 }
 
 static BOOL wined3d_statistics_query_ops_poll(struct wined3d_query *query, DWORD flags)
@@ -652,9 +663,10 @@ static BOOL wined3d_statistics_query_ops_poll(struct wined3d_query *query, DWORD
     return TRUE;
 }
 
-static void wined3d_statistics_query_ops_issue(struct wined3d_query *query, DWORD flags)
+static BOOL wined3d_statistics_query_ops_issue(struct wined3d_query *query, DWORD flags)
 {
     FIXME("query %p, flags %#x.\n", query, flags);
+    return FALSE;
 }
 
 static HRESULT wined3d_overflow_query_ops_poll(struct wined3d_query *query, DWORD flags)
@@ -664,9 +676,10 @@ static HRESULT wined3d_overflow_query_ops_poll(struct wined3d_query *query, DWOR
     return TRUE;
 }
 
-static void wined3d_overflow_query_ops_issue(struct wined3d_query *query, DWORD flags)
+static BOOL wined3d_overflow_query_ops_issue(struct wined3d_query *query, DWORD flags)
 {
     FIXME("query %p, flags %#x.\n", query, flags);
+    return FALSE;
 }
 
 static HRESULT wined3d_pipeline_query_ops_poll(struct wined3d_query *query, DWORD flags)
@@ -676,9 +689,10 @@ static HRESULT wined3d_pipeline_query_ops_poll(struct wined3d_query *query, DWOR
     return TRUE;
 }
 
-static void wined3d_pipeline_query_ops_issue(struct wined3d_query *query, DWORD flags)
+static BOOL wined3d_pipeline_query_ops_issue(struct wined3d_query *query, DWORD flags)
 {
     FIXME("query %p, flags %#x.\n", query, flags);
+    return FALSE;
 }
 
 static const struct wined3d_query_ops event_query_ops =
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index 4cebe279d94..ef474b4f883 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -1440,7 +1440,7 @@ enum wined3d_query_state
 struct wined3d_query_ops
 {
     BOOL (*query_poll)(struct wined3d_query *query, DWORD flags);
-    void (*query_issue)(struct wined3d_query *query, DWORD flags);
+    BOOL (*query_issue)(struct wined3d_query *query, DWORD flags);
 };
 
 struct wined3d_query
-- 
2.11.0

