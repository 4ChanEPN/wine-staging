From 7abb510db81a0a2b0d0bc5fe31897d624c5fedf0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefan@codeweavers.com>
Date: Fri, 27 Sep 2013 17:58:25 +0200
Subject: wined3d: Make resource maps and unmaps a priority command.

---
 dlls/wined3d/cs.c      | 14 +++++---------
 dlls/wined3d/texture.c |  4 ++++
 2 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/dlls/wined3d/cs.c b/dlls/wined3d/cs.c
index 647f1de..5375f04 100644
--- a/dlls/wined3d/cs.c
+++ b/dlls/wined3d/cs.c
@@ -2132,20 +2132,16 @@ void *wined3d_cs_emit_texture_map(struct wined3d_cs *cs, struct wined3d_texture
     struct wined3d_cs_texture_map *op;
     void *ret;
 
-    op = cs->ops->require_space(cs, sizeof(*op));
+    op = cs->ops->require_space_prio(cs, sizeof(*op));
     op->opcode = WINED3D_CS_OP_TEXTURE_MAP;
     op->texture = texture;
     op->sub_resource_idx = sub_resource_idx;
     op->flags = flags;
     op->mem = &ret;
 
-    cs->ops->submit(cs, sizeof(*op));
+    cs->ops->submit_prio(cs, sizeof(*op));
 
-    if (flags & (WINED3D_MAP_NOOVERWRITE | WINED3D_MAP_DISCARD))
-    {
-        FIXME("Dynamic resource map is inefficient\n");
-    }
-    cs->ops->finish(cs);
+    cs->ops->finish_prio(cs);
 
     return ret;
 }
@@ -2164,12 +2160,12 @@ void wined3d_cs_emit_texture_unmap(struct wined3d_cs *cs, struct wined3d_texture
 {
     struct wined3d_cs_texture_unmap *op;
 
-    op = cs->ops->require_space(cs, sizeof(*op));
+    op = cs->ops->require_space_prio(cs, sizeof(*op));
     op->opcode = WINED3D_CS_OP_TEXTURE_UNMAP;
     op->texture = texture;
     op->sub_resource_idx = sub_resource_idx;
 
-    cs->ops->submit(cs, sizeof(*op));
+    cs->ops->submit_prio(cs, sizeof(*op));
 }
 
 static UINT wined3d_cs_exec_update_texture(struct wined3d_cs *cs, const void *data)
diff --git a/dlls/wined3d/texture.c b/dlls/wined3d/texture.c
index 87a0ae5..a63647c 100644
--- a/dlls/wined3d/texture.c
+++ b/dlls/wined3d/texture.c
@@ -1864,6 +1864,10 @@ static HRESULT texture_resource_sub_resource_map(struct wined3d_resource *resour
 
     flags = wined3d_resource_sanitize_map_flags(resource, flags);
 
+    if (flags & (WINED3D_MAP_NOOVERWRITE | WINED3D_MAP_DISCARD))
+    {
+        FIXME("Dynamic resource map is inefficient\n");
+    }
     wined3d_resource_wait_idle(&texture->resource);
 
     base_memory = wined3d_cs_emit_texture_map(device->cs, texture, sub_resource_idx, flags);
-- 
2.9.0

