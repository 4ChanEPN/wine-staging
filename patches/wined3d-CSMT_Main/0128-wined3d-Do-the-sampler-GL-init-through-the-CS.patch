From b4e606f58cff1cdcd57d77686342bd938833225c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Stefan=20D=C3=B6singer?= <stefandoesinger@gmx.at>
Date: Sat, 7 May 2016 22:07:22 +0100
Subject: wined3d: Do the sampler GL init through the CS.

This extra parameter is barf-inducing.
---
 dlls/wined3d/cs.c              | 28 ++++++++++++++++++++---
 dlls/wined3d/sampler.c         | 51 ++++++++++++++++++++++++------------------
 dlls/wined3d/state.c           |  2 +-
 dlls/wined3d/wined3d_private.h |  5 +++++
 4 files changed, 60 insertions(+), 26 deletions(-)

diff --git a/dlls/wined3d/cs.c b/dlls/wined3d/cs.c
index c3e50ef..d59ffb7 100644
--- a/dlls/wined3d/cs.c
+++ b/dlls/wined3d/cs.c
@@ -86,6 +86,7 @@ enum wined3d_cs_op
     WINED3D_CS_OP_BUFFER_CLEANUP,
     WINED3D_CS_OP_TEXTURE_CLEANUP,
     WINED3D_CS_OP_SAMPLER_DESTROY,
+    WINED3D_CS_OP_SAMPLER_INIT,
     WINED3D_CS_OP_SRV_DESTROY,
     WINED3D_CS_OP_GET_DC,
     WINED3D_CS_OP_RELEASE_DC,
@@ -511,7 +512,7 @@ struct wined3d_cs_texture_cleanup
     struct wined3d_texture *texture;
 };
 
-struct wined3d_cs_sampler_destroy
+struct wined3d_cs_sampler_init_destroy
 {
     enum wined3d_cs_op opcode;
     struct wined3d_sampler *sampler;
@@ -2604,7 +2605,7 @@ void wined3d_cs_emit_texture_cleanup(struct wined3d_cs *cs, struct wined3d_textu
 
 static UINT wined3d_cs_exec_sampler_destroy(struct wined3d_cs *cs, const void *data)
 {
-    const struct wined3d_cs_sampler_destroy *op = data;
+    const struct wined3d_cs_sampler_init_destroy *op = data;
 
     wined3d_sampler_destroy(op->sampler);
 
@@ -2613,7 +2614,7 @@ static UINT wined3d_cs_exec_sampler_destroy(struct wined3d_cs *cs, const void *d
 
 void wined3d_cs_emit_sampler_destroy(struct wined3d_cs *cs, struct wined3d_sampler *sampler)
 {
-    struct wined3d_cs_sampler_destroy *op;
+    struct wined3d_cs_sampler_init_destroy *op;
 
     op = cs->ops->require_space(cs, sizeof(*op));
     op->opcode = WINED3D_CS_OP_SAMPLER_DESTROY;
@@ -2622,6 +2623,26 @@ void wined3d_cs_emit_sampler_destroy(struct wined3d_cs *cs, struct wined3d_sampl
     cs->ops->submit(cs, sizeof(*op));
 }
 
+static UINT wined3d_cs_exec_sampler_init(struct wined3d_cs *cs, const void *data)
+{
+    const struct wined3d_cs_sampler_init_destroy *op = data;
+
+    wined3d_sampler_init(op->sampler);
+
+    return sizeof(*op);
+}
+
+void wined3d_cs_emit_sampler_init(struct wined3d_cs *cs, struct wined3d_sampler *sampler)
+{
+    struct wined3d_cs_sampler_init_destroy *op;
+
+    op = cs->ops->require_space(cs, sizeof(*op));
+    op->opcode = WINED3D_CS_OP_SAMPLER_INIT;
+    op->sampler = sampler;
+
+    cs->ops->submit(cs, sizeof(*op));
+}
+
 static UINT wined3d_cs_exec_shader_resource_view_destroy(struct wined3d_cs *cs, const void *data)
 {
     const struct wined3d_cs_shader_resource_view_destroy *op = data;
@@ -2841,6 +2862,7 @@ static UINT (* const wined3d_cs_op_handlers[])(struct wined3d_cs *cs, const void
     /* WINED3D_CS_OP_BUFFER_CLEANUP             */ wined3d_cs_exec_buffer_cleanup,
     /* WINED3D_CS_OP_TEXTURE_CLEANUP            */ wined3d_cs_exec_texture_cleanup,
     /* WINED3D_CS_OP_SAMPLER_DESTROY            */ wined3d_cs_exec_sampler_destroy,
+    /* WINED3D_CS_OP_SAMPLER_INIT               */ wined3d_cs_exec_sampler_init,
     /* WINED3D_CS_OP_SRV_DESTROY                */ wined3d_cs_exec_shader_resource_view_destroy,
     /* WINED3D_CS_OP_GET_DC                     */ wined3d_cs_exec_get_dc,
     /* WINED3D_CS_OP_RELEASE_DC                 */ wined3d_cs_exec_release_dc,
diff --git a/dlls/wined3d/sampler.c b/dlls/wined3d/sampler.c
index 7c04472..714b7e9 100644
--- a/dlls/wined3d/sampler.c
+++ b/dlls/wined3d/sampler.c
@@ -66,43 +66,37 @@ void * CDECL wined3d_sampler_get_parent(const struct wined3d_sampler *sampler)
     return sampler->parent;
 }
 
-static void wined3d_sampler_init(struct wined3d_sampler *sampler, struct wined3d_device *device,
-        const struct wined3d_sampler_desc *desc, void *parent)
+void wined3d_sampler_init(struct wined3d_sampler *sampler)
 {
     const struct wined3d_gl_info *gl_info;
     struct wined3d_context *context;
 
-    sampler->refcount = 1;
-    sampler->device = device;
-    sampler->parent = parent;
-    sampler->desc = *desc;
-
-    context = context_acquire(device, NULL);
+    context = context_acquire(sampler->device, NULL);
     gl_info = context->gl_info;
 
     GL_EXTCALL(glGenSamplers(1, &sampler->name));
     GL_EXTCALL(glSamplerParameteri(sampler->name, GL_TEXTURE_WRAP_S,
-            gl_info->wrap_lookup[desc->address_u - WINED3D_TADDRESS_WRAP]));
+            gl_info->wrap_lookup[sampler->desc.address_u - WINED3D_TADDRESS_WRAP]));
     GL_EXTCALL(glSamplerParameteri(sampler->name, GL_TEXTURE_WRAP_T,
-            gl_info->wrap_lookup[desc->address_v - WINED3D_TADDRESS_WRAP]));
+            gl_info->wrap_lookup[sampler->desc.address_v - WINED3D_TADDRESS_WRAP]));
     GL_EXTCALL(glSamplerParameteri(sampler->name, GL_TEXTURE_WRAP_R,
-            gl_info->wrap_lookup[desc->address_w - WINED3D_TADDRESS_WRAP]));
-    GL_EXTCALL(glSamplerParameterfv(sampler->name, GL_TEXTURE_BORDER_COLOR, &desc->border_color[0]));
+            gl_info->wrap_lookup[sampler->desc.address_w - WINED3D_TADDRESS_WRAP]));
+    GL_EXTCALL(glSamplerParameterfv(sampler->name, GL_TEXTURE_BORDER_COLOR, &sampler->desc.border_color[0]));
     GL_EXTCALL(glSamplerParameteri(sampler->name, GL_TEXTURE_MAG_FILTER,
-            wined3d_gl_mag_filter(desc->mag_filter)));
+            wined3d_gl_mag_filter(sampler->desc.mag_filter)));
     GL_EXTCALL(glSamplerParameteri(sampler->name, GL_TEXTURE_MIN_FILTER,
-            wined3d_gl_min_mip_filter(desc->min_filter, desc->mip_filter)));
-    GL_EXTCALL(glSamplerParameterf(sampler->name, GL_TEXTURE_LOD_BIAS, desc->lod_bias));
-    GL_EXTCALL(glSamplerParameterf(sampler->name, GL_TEXTURE_MIN_LOD, desc->min_lod));
-    GL_EXTCALL(glSamplerParameterf(sampler->name, GL_TEXTURE_MAX_LOD, desc->max_lod));
+            wined3d_gl_min_mip_filter(sampler->desc.min_filter, sampler->desc.mip_filter)));
+    GL_EXTCALL(glSamplerParameterf(sampler->name, GL_TEXTURE_LOD_BIAS, sampler->desc.lod_bias));
+    GL_EXTCALL(glSamplerParameterf(sampler->name, GL_TEXTURE_MIN_LOD, sampler->desc.min_lod));
+    GL_EXTCALL(glSamplerParameterf(sampler->name, GL_TEXTURE_MAX_LOD, sampler->desc.max_lod));
     if (gl_info->supported[EXT_TEXTURE_FILTER_ANISOTROPIC])
-        GL_EXTCALL(glSamplerParameteri(sampler->name, GL_TEXTURE_MAX_ANISOTROPY_EXT, desc->max_anisotropy));
-    if (desc->compare)
+        GL_EXTCALL(glSamplerParameteri(sampler->name, GL_TEXTURE_MAX_ANISOTROPY_EXT, sampler->desc.max_anisotropy));
+    if (sampler->desc.compare)
         GL_EXTCALL(glSamplerParameteri(sampler->name, GL_TEXTURE_COMPARE_MODE, GL_COMPARE_R_TO_TEXTURE));
     GL_EXTCALL(glSamplerParameteri(sampler->name, GL_TEXTURE_COMPARE_FUNC,
-            wined3d_gl_compare_func(desc->comparison_func)));
+            wined3d_gl_compare_func(sampler->desc.comparison_func)));
     if ((context->d3d_info->wined3d_creation_flags & WINED3D_SRGB_READ_WRITE_CONTROL)
-            && gl_info->supported[EXT_TEXTURE_SRGB_DECODE] && !desc->srgb_decode)
+            && gl_info->supported[EXT_TEXTURE_SRGB_DECODE] && !sampler->desc.srgb_decode)
         GL_EXTCALL(glSamplerParameteri(sampler->name, GL_TEXTURE_SRGB_DECODE_EXT, GL_SKIP_DECODE_EXT));
     checkGLcall("sampler creation");
 
@@ -114,6 +108,12 @@ static void wined3d_sampler_init(struct wined3d_sampler *sampler, struct wined3d
 HRESULT CDECL wined3d_sampler_create(struct wined3d_device *device, const struct wined3d_sampler_desc *desc,
         void *parent, struct wined3d_sampler **sampler)
 {
+    return wined3d_sampler_create_from_cs(device, desc, parent, sampler, FALSE);
+}
+
+HRESULT wined3d_sampler_create_from_cs(struct wined3d_device *device, const struct wined3d_sampler_desc *desc,
+        void *parent, struct wined3d_sampler **sampler, BOOL from_cs)
+{
     struct wined3d_sampler *object;
 
     TRACE("device %p, desc %p, parent %p, sampler %p.\n", device, desc, parent, sampler);
@@ -134,7 +134,14 @@ HRESULT CDECL wined3d_sampler_create(struct wined3d_device *device, const struct
     if (!(object = HeapAlloc(GetProcessHeap(), HEAP_ZERO_MEMORY, sizeof(*object))))
         return E_OUTOFMEMORY;
 
-    wined3d_sampler_init(object, device, desc, parent);
+    object->refcount = 1;
+    object->device = device;
+    object->parent = parent;
+    object->desc = *desc;
+    if (from_cs)
+        wined3d_sampler_init(object);
+    else
+        wined3d_cs_emit_sampler_init(device->cs, object);
 
     TRACE("Created sampler %p.\n", object);
     *sampler = object;
diff --git a/dlls/wined3d/state.c b/dlls/wined3d/state.c
index 67aae67..d7ad944 100644
--- a/dlls/wined3d/state.c
+++ b/dlls/wined3d/state.c
@@ -3604,7 +3604,7 @@ static void sampler(struct wined3d_context *context, const struct wined3d_state
             }
             else
             {
-                if (FAILED(wined3d_sampler_create(device, &desc, NULL, &sampler)))
+                if (FAILED(wined3d_sampler_create_from_cs(device, &desc, NULL, &sampler, TRUE)))
                 {
                     ERR("Failed to create sampler.\n");
                     sampler = NULL;
diff --git a/dlls/wined3d/wined3d_private.h b/dlls/wined3d/wined3d_private.h
index 8b807c9..68ea987 100644
--- a/dlls/wined3d/wined3d_private.h
+++ b/dlls/wined3d/wined3d_private.h
@@ -2814,7 +2814,11 @@ struct wined3d_sampler
     GLuint name;
 };
 
+
+HRESULT wined3d_sampler_create_from_cs(struct wined3d_device *device, const struct wined3d_sampler_desc *desc,
+        void *parent, struct wined3d_sampler **sampler, BOOL from_cs) DECLSPEC_HIDDEN;
 void wined3d_sampler_destroy(struct wined3d_sampler *sampler) DECLSPEC_HIDDEN;
+void wined3d_sampler_init(struct wined3d_sampler *sampler) DECLSPEC_HIDDEN;
 
 struct wined3d_vertex_declaration_element
 {
@@ -3065,6 +3069,7 @@ void wined3d_cs_emit_resource_cleanup(struct wined3d_cs *cs,
 void wined3d_cs_emit_buffer_cleanup(struct wined3d_cs *cs, struct wined3d_buffer *buffer) DECLSPEC_HIDDEN;
 void wined3d_cs_emit_texture_cleanup(struct wined3d_cs *cs, struct wined3d_texture *texture) DECLSPEC_HIDDEN;
 void wined3d_cs_emit_sampler_destroy(struct wined3d_cs *cs, struct wined3d_sampler *sampler) DECLSPEC_HIDDEN;
+void wined3d_cs_emit_sampler_init(struct wined3d_cs *cs, struct wined3d_sampler *sampler) DECLSPEC_HIDDEN;
 void wined3d_cs_emit_shader_resource_view_destroy(struct wined3d_cs *cs,
         struct wined3d_shader_resource_view *view) DECLSPEC_HIDDEN;
 void wined3d_cs_emit_get_dc(struct wined3d_cs *cs, struct wined3d_texture *texture,
-- 
2.8.0

