From 055cb5d80161f8c6f2b6783bac914d99373a8219 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Wed, 26 Mar 2014 05:26:25 +0100
Subject: include: Add highlevelmonitorconfigurationapi.h

---
 include/Makefile.in                        |    1 +
 include/highlevelmonitorconfigurationapi.h |   82 ++++++++++++++++++++++++++++
 2 files changed, 83 insertions(+)
 create mode 100644 include/highlevelmonitorconfigurationapi.h

diff --git a/include/Makefile.in b/include/Makefile.in
index eee809e..5c6a1c6 100644
--- a/include/Makefile.in
+++ b/include/Makefile.in
@@ -330,6 +330,7 @@ SRCDIR_INCLUDES = \
 	gdipluspixelformats.h \
 	gdiplustypes.h \
 	guiddef.h \
+	highlevelmonitorconfigurationapi.h \
 	hlguids.h \
 	htmlhelp.h \
 	http.h \
diff --git a/include/highlevelmonitorconfigurationapi.h b/include/highlevelmonitorconfigurationapi.h
new file mode 100644
index 0000000..9a0547c
--- /dev/null
+++ b/include/highlevelmonitorconfigurationapi.h
@@ -0,0 +1,82 @@
+/*
+ * Copyright 2014 Michael MÃ¼ller for Pipelight
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library; if not, write to the Free Software
+ * Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
+ */
+
+#ifndef __WINE_HIGHLEVELMONITORCONFIGURATIONAPI_H
+#define __WINE_HIGHLEVELMONITORCONFIGURATIONAPI_H
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+typedef enum _MC_COLOR_TEMPERATURE
+{
+    MC_COLOR_TEMPERATURE_UNKNOWN,
+    MC_COLOR_TEMPERATURE_4000K,
+    MC_COLOR_TEMPERATURE_5000K,
+    MC_COLOR_TEMPERATURE_6500K,
+    MC_COLOR_TEMPERATURE_7500K,
+    MC_COLOR_TEMPERATURE_8200K,
+    MC_COLOR_TEMPERATURE_9300K,
+    MC_COLOR_TEMPERATURE_10000K,
+    MC_COLOR_TEMPERATURE_11500K
+} MC_COLOR_TEMPERATURE, *LPMC_COLOR_TEMPERATURE;
+
+typedef enum _MC_POSITION_TYPE
+{
+    MC_HORIZONTAL_POSITION = 0,
+    MC_VERTICAL_POSITION = 1
+} MC_POSITION_TYPE;
+
+typedef enum _MC_SIZE_TYPE
+{
+    MC_WIDTH = 0,
+    MC_HEIGHT = 1
+} MC_SIZE_TYPE;
+
+typedef enum _MC_DRIVE_TYPE
+{
+    MC_RED_DRIVE = 0,
+    MC_GREEN_DRIVE = 1,
+    MC_BLUE_DRIVE = 2
+} MC_DRIVE_TYPE;
+
+typedef enum _MC_GAIN_TYPE
+{
+    MC_RED_GAIN = 0,
+    MC_GREEN_GAIN = 1,
+    MC_BLUE_GAIN = 2
+} MC_GAIN_TYPE;
+
+typedef enum _MC_DISPLAY_TECHNOLOGY_TYPE
+{
+    MC_SHADOW_MASK_CATHODE_RAY_TUBE,
+    MC_APERTURE_GRILL_CATHODE_RAY_TUBE,
+    MC_THIN_FILM_TRANSISTOR,
+    MC_LIQUID_CRYSTAL_ON_SILICON,
+    MC_PLASMA,
+    MC_ORGANIC_LIGHT_EMITTING_DIODE,
+    MC_ELECTROLUMINESCENT,
+    MC_MICROELECTROMECHANICAL,
+    MC_FIELD_EMISSION_DEVICE
+} MC_DISPLAY_TECHNOLOGY_TYPE, *LPMC_DISPLAY_TECHNOLOGY_TYPE;
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* __WINE_HIGHLEVELMONITORCONFIGURATIONAPI_H */
-- 
1.7.9.5

