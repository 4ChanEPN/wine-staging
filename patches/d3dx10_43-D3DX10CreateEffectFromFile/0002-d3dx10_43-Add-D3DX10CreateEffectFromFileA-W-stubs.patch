From 800e3ab9e59fb324fd8168f20a8139171794f4c8 Mon Sep 17 00:00:00 2001
From: Alistair Leslie-Hughes <leslie_alistair@hotmail.com>
Date: Wed, 15 Jul 2015 12:19:50 +1000
Subject: d3dx10_43: Add D3DX10CreateEffectFromFileA/W stubs.

---
 dlls/d3dx10_43/d3dx10_43.spec   |  4 ++--
 dlls/d3dx10_43/d3dx10_43_main.c | 31 +++++++++++++++++++++++++++++++
 2 files changed, 33 insertions(+), 2 deletions(-)

diff --git a/dlls/d3dx10_43/d3dx10_43.spec b/dlls/d3dx10_43/d3dx10_43.spec
index 363d007..5bc871b 100644
--- a/dlls/d3dx10_43/d3dx10_43.spec
+++ b/dlls/d3dx10_43/d3dx10_43.spec
@@ -20,8 +20,8 @@
 @ stub D3DX10CreateAsyncTextureProcessor(ptr ptr ptr)
 @ stub D3DX10CreateDevice(ptr long long long ptr)
 @ stub D3DX10CreateDeviceAndSwapChain(ptr long long long ptr ptr ptr)
-@ stub D3DX10CreateEffectFromFileA(str ptr ptr str long long ptr ptr ptr ptr ptr ptr)
-@ stub D3DX10CreateEffectFromFileW(wstr ptr ptr str long long ptr ptr ptr ptr ptr ptr)
+@ stdcall D3DX10CreateEffectFromFileA(str ptr ptr str long long ptr ptr ptr ptr ptr ptr)
+@ stdcall D3DX10CreateEffectFromFileW(wstr ptr ptr str long long ptr ptr ptr ptr ptr ptr)
 @ stub D3DX10CreateEffectFromMemory(ptr long str ptr ptr str long long ptr ptr ptr ptr ptr ptr)
 @ stub D3DX10CreateEffectFromResourceA(long str str ptr ptr str long long ptr ptr ptr ptr ptr ptr)
 @ stub D3DX10CreateEffectFromResourceW(long wstr wstr ptr ptr str long long ptr ptr ptr ptr ptr ptr)
diff --git a/dlls/d3dx10_43/d3dx10_43_main.c b/dlls/d3dx10_43/d3dx10_43_main.c
index b3f9341..1b505fa 100644
--- a/dlls/d3dx10_43/d3dx10_43_main.c
+++ b/dlls/d3dx10_43/d3dx10_43_main.c
@@ -21,6 +21,8 @@
 
 #include "config.h"
 #include "wine/port.h"
+#include "wine/debug.h"
+#include "wine/unicode.h"
 
 #include <stdarg.h>
 
@@ -32,6 +34,9 @@
 #include "objbase.h"
 
 #include "d3d10.h"
+#include "d3dx10core.h"
+
+WINE_DEFAULT_DEBUG_CHANNEL(d3dx);
 
 BOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)
 {
@@ -59,3 +64,29 @@ BOOL WINAPI D3DX10CheckVersion(UINT d3dsdkvers, UINT d3dxsdkvers)
 
     return FALSE;
 }
+
+HRESULT WINAPI D3DX10CreateEffectFromFileA(const char *filename, const D3D10_SHADER_MACRO *defines,
+        ID3D10Include *include, const char *profile, UINT hlslflags, UINT fxflags, ID3D10Device *device,
+        ID3D10EffectPool *effectpool, ID3DX10ThreadPump *pump, ID3D10Effect **effect, ID3D10Blob **errors,
+        HRESULT *hresult)
+{
+    FIXME("filename %s, defines %p, include %p, profile %s, hlslflags %#x, fxflags %#x, "
+            "device %p, effectpool %p, pump %p, effect %p, errors %p, hresult %p\n",
+            debugstr_a(filename), defines, include, debugstr_a(profile), hlslflags, fxflags,
+            device, effectpool, pump, effect, errors, hresult);
+
+    return E_NOTIMPL;
+}
+
+HRESULT WINAPI D3DX10CreateEffectFromFileW(const WCHAR *filename, const D3D10_SHADER_MACRO *defines,
+        ID3D10Include *include, const char *profile, UINT hlslflags, UINT fxflags, ID3D10Device *device,
+        ID3D10EffectPool *effectpool, ID3DX10ThreadPump *pump, ID3D10Effect **effect, ID3D10Blob **errors,
+        HRESULT *hresult)
+{
+    FIXME("filename %s, defines %p, include %p, profile %s, hlslflags %#x, fxflags %#x, "
+            "device %p, effectpool %p, pump %p, effect %p, errors %p, hresult %p\n",
+            debugstr_w(filename), defines, include, debugstr_a(profile), hlslflags, fxflags, device,
+            effectpool, pump, effect, errors, hresult);
+
+    return E_NOTIMPL;
+}
-- 
2.4.5

