From 5514f8e7f8421577dc300c146ed1943d254d903c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Michael=20M=C3=BCller?= <michael@fds-team.de>
Date: Thu, 9 Oct 2014 17:35:50 +0200
Subject: msvcp90/tests: Add tests to check that basic_string_wchar_dtor
 returns NULL.

---
 dlls/msvcp90/tests/string.c | 79 +++++++++++++++++++++++++++++----------------
 1 file changed, 52 insertions(+), 27 deletions(-)

diff --git a/dlls/msvcp90/tests/string.c b/dlls/msvcp90/tests/string.c
index f1aa92a..a2cd46f 100644
--- a/dlls/msvcp90/tests/string.c
+++ b/dlls/msvcp90/tests/string.c
@@ -85,7 +85,7 @@ static size_t *p_basic_string_char_npos;
 static basic_string_wchar* (__thiscall *p_basic_string_wchar_ctor)(basic_string_wchar*);
 static basic_string_wchar* (__thiscall *p_basic_string_wchar_copy_ctor)(basic_string_wchar*, basic_string_wchar*);
 static basic_string_wchar* (__thiscall *p_basic_string_wchar_ctor_cstr)(basic_string_wchar*, const wchar_t*);
-static void (__thiscall *p_basic_string_wchar_dtor)(basic_string_wchar*);
+static void* (__thiscall *p_basic_string_wchar_dtor)(basic_string_wchar*);
 static basic_string_wchar* (__thiscall *p_basic_string_wchar_erase)(basic_string_wchar*, size_t, size_t);
 static basic_string_wchar* (__thiscall *p_basic_string_wchar_assign_cstr_len)(basic_string_wchar*, const wchar_t*, size_t);
 static const wchar_t* (__thiscall *p_basic_string_wchar_cstr)(basic_string_wchar*);
@@ -113,32 +113,35 @@ static void __cdecl test_invalid_parameter_handler(const wchar_t *expression,
 #include "pshpack1.h"
 struct thiscall_thunk
 {
-    BYTE pop_eax;    /* popl  %eax (ret addr) */
-    BYTE pop_edx;    /* popl  %edx (func) */
-    BYTE pop_ecx;    /* popl  %ecx (this) */
-    BYTE push_eax;   /* pushl %eax */
-    WORD jmp_edx;    /* jmp  *%edx */
+    BYTE pop_ecx;           /* popl  %ecx (ret addr) */
+    BYTE pop_edx;           /* popl  %edx (func) */
+    BYTE pop_eax;           /* popl  %eax (eax value) */
+    BYTE xchg_ecx_esp[3];   /* xchg %ecx, *%esp (this <-> ret addr) */
+    WORD jmp_edx;           /* jmp  *%edx */
 };
 #include "poppack.h"
 
-static void * (WINAPI *call_thiscall_func1)( void *func, void *this );
-static void * (WINAPI *call_thiscall_func2)( void *func, void *this, const void *a );
-static void * (WINAPI *call_thiscall_func3)( void *func, void *this, const void *a, const void *b );
-static void * (WINAPI *call_thiscall_func4)( void *func, void *this, const void *a, const void *b,
-                                             const void *c );
-static void * (WINAPI *call_thiscall_func5)( void *func, void *this, const void *a, const void *b,
-                                             const void *c, const void *d );
-static void * (WINAPI *call_thiscall_func6)( void *func, void *this, const void *a, const void *b,
-                                             const void *c, const void *d, const void *e );
+static void * (WINAPI *call_thiscall_func1)( void *func, unsigned int eax, void *this);
+static void * (WINAPI *call_thiscall_func2)( void *func, unsigned int eax, void *this, const void *a );
+static void * (WINAPI *call_thiscall_func3)( void *func, unsigned int eax, void *this, const void *a,
+                                             const void *b );
+static void * (WINAPI *call_thiscall_func4)( void *func, unsigned int eax, void *this, const void *a,
+                                             const void *b, const void *c );
+static void * (WINAPI *call_thiscall_func5)( void *func, unsigned int eax, void *this, const void *a,
+                                             const void *b, const void *c, const void *d );
+static void * (WINAPI *call_thiscall_func6)( void *func, unsigned int eax, void *this, const void *a,
+                                             const void *b, const void *c, const void *d, const void *e );
 
 static void init_thiscall_thunk(void)
 {
     struct thiscall_thunk *thunk = VirtualAlloc( NULL, sizeof(*thunk),
                                                  MEM_COMMIT, PAGE_EXECUTE_READWRITE );
-    thunk->pop_eax  = 0x58;   /* popl  %eax */
-    thunk->pop_edx  = 0x5a;   /* popl  %edx */
     thunk->pop_ecx  = 0x59;   /* popl  %ecx */
-    thunk->push_eax = 0x50;   /* pushl %eax */
+    thunk->pop_edx  = 0x5a;   /* popl  %edx */
+    thunk->pop_eax  = 0x58;   /* popl  %eax */
+    thunk->xchg_ecx_esp[0] = 0x87; /* xchg %ecx, *%esp */
+    thunk->xchg_ecx_esp[1] = 0x0c;
+    thunk->xchg_ecx_esp[2] = 0x24;
     thunk->jmp_edx  = 0xe2ff; /* jmp  *%edx */
     call_thiscall_func1 = (void *)thunk;
     call_thiscall_func2 = (void *)thunk;
@@ -148,15 +151,16 @@ static void init_thiscall_thunk(void)
     call_thiscall_func6 = (void *)thunk;
 }
 
-#define call_func1(func,_this) call_thiscall_func1(func,_this)
-#define call_func2(func,_this,a) call_thiscall_func2(func,_this,(const void*)a)
-#define call_func3(func,_this,a,b) call_thiscall_func3(func,_this,(const void*)a,(const void*)b)
-#define call_func4(func,_this,a,b,c) call_thiscall_func4(func,_this,(const void*)a,\
-        (const void*)b,(const void*)c)
-#define call_func5(func,_this,a,b,c,d) call_thiscall_func5(func,_this,(const void*)a,\
-        (const void*)b,(const void*)c,(const void*)d)
-#define call_func6(func,_this,a,b,c,d,e) call_thiscall_func6(func,_this,(const void*)a,\
-        (const void*)b,(const void*)c,(const void*)d,(const void*)e)
+#define call_func1(func,_this) call_thiscall_func1(func,0,_this)
+#define call_func2(func,_this,a) call_thiscall_func2(func,0,_this,(const void*)a)
+#define call_func3(func,_this,a,b) call_thiscall_func3(func,0,_this,(const void*)a,(const void*)b)
+#define call_func4(func,_this,a,b,c) call_thiscall_func4(func,0,_this,(const void*)a,\
+         (const void*)b,(const void*)c)
+#define call_func5(func,_this,a,b,c,d) call_thiscall_func5(func,0,_this,(const void*)a,\
+         (const void*)b,(const void*)c,(const void*)d)
+#define call_func6(func,_this,a,b,c,d,e) call_thiscall_func6(func,0,_this,(const void*)a,\
+         (const void*)b,(const void*)c,(const void*)d,(const void*)e)
+#define call_func1_eax(func,eax,_this) call_thiscall_func1(func,eax,_this)
 
 #else
 
@@ -767,6 +771,26 @@ static void test_basic_string_char_find_last_not_of(void) {
     }
 }
 
+static void test_basic_string_dtor_eax(void) {
+#ifdef __i386__
+    basic_string_wchar str1;
+    void *ret;
+    wchar_t wtmp1[32];
+
+    mbstowcs(wtmp1, "qwerty", 32);
+
+    /* eax = 0x1337 */
+    call_func2(p_basic_string_wchar_ctor_cstr, &str1, wtmp1);
+    ret = call_func1_eax(p_basic_string_wchar_dtor, 0x1337, &str1);
+    ok (ret == (void *)0x0, "Expected eax value 0x%x, got 0x%x\n", 0x0, (unsigned int)ret);
+
+    /* eax = 0xdeadbeef */
+    call_func2(p_basic_string_wchar_ctor_cstr, &str1, wtmp1);
+    ret = call_func1_eax(p_basic_string_wchar_dtor, 0xdeadbeef, &str1);
+    ok (ret == (void *)0x0, "Expected eax value 0x%x, got 0x%x\n", 0x0, (unsigned int)ret);
+#endif
+}
+
 START_TEST(string)
 {
     if(!init())
@@ -783,6 +807,7 @@ START_TEST(string)
     test_basic_string_wchar();
     test_basic_string_wchar_swap();
     test_basic_string_char_find_last_not_of();
+    test_basic_string_dtor_eax();
 
     ok(!invalid_parameter, "invalid_parameter_handler was invoked too many times\n");
 
-- 
1.9.1

