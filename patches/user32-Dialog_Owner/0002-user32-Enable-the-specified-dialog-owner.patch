From 1e8d81841236d710c483dc4133fa90991bcc07d0 Mon Sep 17 00:00:00 2001
From: Dmitry Timoshkov <dmitry@baikal.ru>
Date: Wed, 30 Mar 2016 17:58:35 +0800
Subject: user32: Enable the specified dialog owner.

This patch reverts d75991d80e77ac9d93b85b8369c6fce39bd4fdb2
and a part of 0d7116b968edae3f5912112bda436df8924911fb.
---
 dlls/user.exe16/dialog.c       | 4 ++--
 dlls/user.exe16/user_private.h | 2 +-
 dlls/user32/controls.h         | 4 ++--
 dlls/user32/dialog.c           | 9 ++++-----
 dlls/user32/tests/win.c        | 1 -
 5 files changed, 9 insertions(+), 11 deletions(-)

diff --git a/dlls/user.exe16/dialog.c b/dlls/user.exe16/dialog.c
index 766a468..fead42d 100644
--- a/dlls/user.exe16/dialog.c
+++ b/dlls/user.exe16/dialog.c
@@ -744,7 +744,7 @@ INT16 WINAPI DialogBoxParam16( HINSTANCE16 hInst, LPCSTR template,
     {
         HWND owner = WIN_Handle32(owner16);
         hwnd = DIALOG_CreateIndirect16( hInst, data, owner, dlgProc, param, TRUE );
-        if (hwnd) ret = wow_handlers32.dialog_box_loop( hwnd );
+        if (hwnd) ret = wow_handlers32.dialog_box_loop( hwnd, owner );
         GlobalUnlock16( hmem );
     }
     FreeResource16( hmem );
@@ -764,7 +764,7 @@ INT16 WINAPI DialogBoxIndirectParam16( HINSTANCE16 hInst, HANDLE16 dlgTemplate,
     if (!(ptr = GlobalLock16( dlgTemplate ))) return -1;
     hwnd = DIALOG_CreateIndirect16( hInst, ptr, owner, dlgProc, param, TRUE );
     GlobalUnlock16( dlgTemplate );
-    if (hwnd) return wow_handlers32.dialog_box_loop( hwnd );
+    if (hwnd) return wow_handlers32.dialog_box_loop( hwnd, owner );
     return -1;
 }
 
diff --git a/dlls/user.exe16/user_private.h b/dlls/user.exe16/user_private.h
index 3d97546..7c91afb 100644
--- a/dlls/user.exe16/user_private.h
+++ b/dlls/user.exe16/user_private.h
@@ -63,7 +63,7 @@ struct wow_handlers32
     HWND    (*get_win_handle)(HWND);
     WNDPROC (*alloc_winproc)(WNDPROC,BOOL);
     struct tagDIALOGINFO *(*get_dialog_info)(HWND,BOOL);
-    INT     (*dialog_box_loop)(HWND);
+    INT     (*dialog_box_loop)(HWND,HWND);
     ULONG_PTR (*get_icon_param)(HICON);
     ULONG_PTR (*set_icon_param)(HICON,ULONG_PTR);
 };
diff --git a/dlls/user32/controls.h b/dlls/user32/controls.h
index 542bf39..69bc94c 100644
--- a/dlls/user32/controls.h
+++ b/dlls/user32/controls.h
@@ -121,7 +121,7 @@ struct wow_handlers32
     HWND    (*get_win_handle)(HWND);
     WNDPROC (*alloc_winproc)(WNDPROC,BOOL);
     struct tagDIALOGINFO *(*get_dialog_info)(HWND,BOOL);
-    INT     (*dialog_box_loop)(HWND);
+    INT     (*dialog_box_loop)(HWND,HWND);
     ULONG_PTR (*get_icon_param)(HICON);
     ULONG_PTR (*set_icon_param)(HICON,ULONG_PTR);
 };
@@ -244,7 +244,7 @@ typedef struct tagDIALOGINFO
 #define DF_OWNERENABLED 0x0002
 
 extern DIALOGINFO *DIALOG_get_info( HWND hwnd, BOOL create ) DECLSPEC_HIDDEN;
-extern INT DIALOG_DoDialogBox( HWND hwnd ) DECLSPEC_HIDDEN;
+extern INT DIALOG_DoDialogBox( HWND hwnd, HWND owner ) DECLSPEC_HIDDEN;
 
 HRGN set_control_clipping( HDC hdc, const RECT *rect ) DECLSPEC_HIDDEN;
 
diff --git a/dlls/user32/dialog.c b/dlls/user32/dialog.c
index 3ea426d..a61090d 100644
--- a/dlls/user32/dialog.c
+++ b/dlls/user32/dialog.c
@@ -769,9 +769,8 @@ HWND WINAPI CreateDialogIndirectParamW( HINSTANCE hInst, LPCDLGTEMPLATEW dlgTemp
 /***********************************************************************
  *           DIALOG_DoDialogBox
  */
-INT DIALOG_DoDialogBox( HWND hwnd )
+INT DIALOG_DoDialogBox( HWND hwnd, HWND owner )
 {
-    HWND owner = GetWindow( hwnd, GW_OWNER );
     DIALOGINFO * dlgInfo;
     MSG msg;
     INT retval;
@@ -842,7 +841,7 @@ INT_PTR WINAPI DialogBoxParamA( HINSTANCE hInst, LPCSTR name,
     if (!(hrsrc = FindResourceA( hInst, name, (LPSTR)RT_DIALOG ))) return -1;
     if (!(ptr = LoadResource(hInst, hrsrc))) return -1;
     hwnd = DIALOG_CreateIndirect( hInst, ptr, owner, dlgProc, param, FALSE, TRUE );
-    if (hwnd) return DIALOG_DoDialogBox( hwnd );
+    if (hwnd) return DIALOG_DoDialogBox( hwnd, owner );
     return 0;
 }
 
@@ -860,7 +859,7 @@ INT_PTR WINAPI DialogBoxParamW( HINSTANCE hInst, LPCWSTR name,
     if (!(hrsrc = FindResourceW( hInst, name, (LPWSTR)RT_DIALOG ))) return -1;
     if (!(ptr = LoadResource(hInst, hrsrc))) return -1;
     hwnd = DIALOG_CreateIndirect( hInst, ptr, owner, dlgProc, param, TRUE, TRUE );
-    if (hwnd) return DIALOG_DoDialogBox( hwnd );
+    if (hwnd) return DIALOG_DoDialogBox( hwnd, owner );
     return 0;
 }
 
@@ -873,7 +872,7 @@ INT_PTR WINAPI DialogBoxIndirectParamAorW( HINSTANCE hInstance, LPCVOID template
                                            LPARAM param, DWORD flags )
 {
     HWND hwnd = DIALOG_CreateIndirect( hInstance, template, owner, dlgProc, param, !flags, TRUE );
-    if (hwnd) return DIALOG_DoDialogBox( hwnd );
+    if (hwnd) return DIALOG_DoDialogBox( hwnd, owner );
     return -1;
 }
 
diff --git a/dlls/user32/tests/win.c b/dlls/user32/tests/win.c
index 528669e..9c0a44a 100644
--- a/dlls/user32/tests/win.c
+++ b/dlls/user32/tests/win.c
@@ -4322,7 +4322,6 @@ static INT_PTR WINAPI empty_dlg_proc2(HWND hwnd, UINT msg, WPARAM wparam, LPARAM
 
         param->dlg_data->style |= WS_CHILD;
         DialogBoxIndirectParamA(GetModuleHandleA(NULL), param->dlg_data, hwnd, empty_dlg_proc3, 0);
-        todo_wine_if (!(style & (WS_CHILD|WS_POPUP)))
         ok(IsWindowEnabled(hwnd), "wrong state for %p (%08x)\n", hwnd, style);
 
         EndDialog(hwnd, 0);
-- 
2.7.1

