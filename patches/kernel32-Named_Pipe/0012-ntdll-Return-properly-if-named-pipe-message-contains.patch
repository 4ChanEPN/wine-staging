From f9dd5ccc10550f22c8cf5f5ed979066c4f6281fc Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Mon, 4 Aug 2014 06:32:08 +0200
Subject: ntdll: Return properly if named pipe message contains more data.

---
 dlls/kernel32/tests/pipe.c |   22 ----------------------
 dlls/ntdll/file.c          |    5 +++++
 2 files changed, 5 insertions(+), 22 deletions(-)

diff --git a/dlls/kernel32/tests/pipe.c b/dlls/kernel32/tests/pipe.c
index b9ea38b..374bc33 100644
--- a/dlls/kernel32/tests/pipe.c
+++ b/dlls/kernel32/tests/pipe.c
@@ -304,9 +304,7 @@ static void test_CreateNamedPipe(int pipemode)
         else
         {
             SetLastError(0xdeadbeef);
-            todo_wine
             ok(!ReadFile(hnp, ibuf, 4, &readden, NULL), "ReadFile\n");
-            todo_wine
             ok(GetLastError() == ERROR_MORE_DATA, "wrong error\n");
         }
         ok(readden == 4, "read got %d bytes\n", readden);
@@ -327,15 +325,11 @@ static void test_CreateNamedPipe(int pipemode)
         else
         {
             SetLastError(0xdeadbeef);
-            todo_wine
             ok(!ReadFile(hnp, ibuf, 4, &readden, NULL), "ReadFile\n");
-            todo_wine
             ok(GetLastError() == ERROR_MORE_DATA, "wrong error\n");
             ok(readden == 4, "read got %d bytes\n", readden);
             SetLastError(0xdeadbeef);
-            todo_wine
             ok(!ReadFile(hnp, ibuf + 4, 4, &readden, NULL), "ReadFile\n");
-            todo_wine
             ok(GetLastError() == ERROR_MORE_DATA, "wrong error\n");
         }
         ok(readden == 4, "read got %d bytes\n", readden);
@@ -421,9 +415,7 @@ static void test_CreateNamedPipe(int pipemode)
             ok(WriteFile(hnp, obuf, sizeof(obuf), &written, NULL), "WriteFile\n");
             ok(written == sizeof(obuf), "write file len\n");
             SetLastError(0xdeadbeef);
-            todo_wine
             ok(!ReadFile(hFile, ibuf, 4, &readden, NULL), "ReadFile\n");
-            todo_wine
             ok(GetLastError() == ERROR_MORE_DATA, "wrong error\n");
             ok(readden == 4, "read got %d bytes\n", readden);
             ok(ReadFile(hFile, ibuf + 4, sizeof(ibuf) - 4, &readden, NULL), "ReadFile\n");
@@ -434,9 +426,7 @@ static void test_CreateNamedPipe(int pipemode)
             ok(WriteFile(hFile, obuf2, sizeof(obuf2), &written, NULL), "WriteFile\n");
             ok(written == sizeof(obuf2), "write file len\n");
             SetLastError(0xdeadbeef);
-            todo_wine
             ok(!ReadFile(hnp, ibuf, 4, &readden, NULL), "ReadFile\n");
-            todo_wine
             ok(GetLastError() == ERROR_MORE_DATA, "wrong error\n");
             ok(readden == 4, "read got %d bytes\n", readden);
             ok(ReadFile(hnp, ibuf + 4, sizeof(ibuf) - 4, &readden, NULL), "ReadFile\n");
@@ -461,16 +451,12 @@ static void test_CreateNamedPipe(int pipemode)
             ok(readden == sizeof(obuf) + sizeof(obuf2), "peek got %d bytes total\n", readden);
             ok(leftmsg == sizeof(obuf), "peek got %d bytes left in message\n", leftmsg);
             SetLastError(0xdeadbeef);
-            todo_wine
             ok(!ReadFile(hFile, ibuf, 4, &readden, NULL), "ReadFile\n");
-            todo_wine
             ok(GetLastError() == ERROR_MORE_DATA, "wrong error\n");
             ok(readden == 4, "read got %d bytes\n", readden);
             SetLastError(0xdeadbeef);
             ret = RpcReadFile(hFile, ibuf + 4, 4, &readden, NULL);
-            todo_wine
             ok(!ret, "RpcReadFile\n");
-            todo_wine
             ok(GetLastError() == ERROR_MORE_DATA, "wrong error\n");
             ok(readden == 4, "read got %d bytes\n", readden);
             readden = leftmsg = -1;
@@ -498,15 +484,11 @@ static void test_CreateNamedPipe(int pipemode)
                 ok(leftmsg == sizeof(obuf2), "peek got %d bytes left in message\n", leftmsg);
                 SetLastError(0xdeadbeef);
                 ret = RpcReadFile(hFile, ibuf, 4, &readden, NULL);
-                todo_wine
                 ok(!ret, "RpcReadFile\n");
-                todo_wine
                 ok(GetLastError() == ERROR_MORE_DATA, "wrong error\n");
                 ok(readden == 4, "read got %d bytes\n", readden);
                 SetLastError(0xdeadbeef);
-                todo_wine
                 ok(!ReadFile(hFile, ibuf + 4, 4, &readden, NULL), "ReadFile\n");
-                todo_wine
                 ok(GetLastError() == ERROR_MORE_DATA, "wrong error\n");
                 ok(readden == 4, "read got %d bytes\n", readden);
                 readden = leftmsg = -1;
@@ -652,15 +634,11 @@ static void test_CreateNamedPipe(int pipemode)
             else
             {
                 SetLastError(0xdeadbeef);
-                todo_wine
                 ok(!ReadFile(hFile, big_ibuf, 32, &readden, NULL), "ReadFile\n");
-                todo_wine
                 ok(GetLastError() == ERROR_MORE_DATA, "wrong error\n");
                 ok(readden == 32, "read got %d bytes\n", readden);
                 SetLastError(0xdeadbeef);
-                todo_wine
                 ok(!ReadFile(hFile, big_ibuf + 32, 32, &readden, NULL), "ReadFile\n");
-                todo_wine
                 ok(GetLastError() == ERROR_MORE_DATA, "wrong error\n");
             }
             ok(readden == 32, "read got %d bytes\n", readden);
diff --git a/dlls/ntdll/file.c b/dlls/ntdll/file.c
index 38273fc..8b262d0 100644
--- a/dlls/ntdll/file.c
+++ b/dlls/ntdll/file.c
@@ -691,6 +691,7 @@ NTSTATUS WINAPI NtReadFile(HANDLE hFile, HANDLE hEvent,
                 iov.iov_len  = sizeof(ret);
                 ret = recvmsg( unix_handle, &msg, MSG_TRUNC );
                 if (ret < 0) ERR("failed to dequeue message from message mode pipe\n");
+                msg.msg_flags = 0;
             }
         }
         else
@@ -813,6 +814,10 @@ err:
     if (needs_close) close( unix_handle );
     if (status == STATUS_SUCCESS || (status == STATUS_END_OF_FILE && !async_read))
     {
+        /* inform the application if the message was truncated in named pipe message read-mode */
+        if (message_mode && (msg.msg_flags & MSG_TRUNC) && (fcntl( unix_handle, F_GETSIG ) & 0x01))
+            status = STATUS_MORE_ENTRIES;
+
         io_status->u.Status = status;
         io_status->Information = total;
         TRACE("= SUCCESS (%u)\n", total);
-- 
1.7.9.5

