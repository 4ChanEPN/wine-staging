From 8a10cbd1ebf03f39f9a358b91ff06dde64b6bd49 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Mon, 4 Aug 2014 00:29:26 +0200
Subject: server: Show warning if message mode is not supported.

This patch changes the create_named_pipe wineserver call to return
which flags were supported. This allows to show a FIXME in ntdll for
missing message mode support.
---
 dlls/ntdll/file.c   |   15 +++++++++++----
 server/named_pipe.c |    1 +
 server/protocol.def |    1 +
 3 files changed, 13 insertions(+), 4 deletions(-)

diff --git a/dlls/ntdll/file.c b/dlls/ntdll/file.c
index 92d9829..6774a5bc 100644
--- a/dlls/ntdll/file.c
+++ b/dlls/ntdll/file.c
@@ -3044,6 +3044,7 @@ NTSTATUS WINAPI NtCreateNamedPipeFile( PHANDLE handle, ULONG access,
                                        PLARGE_INTEGER timeout)
 {
     NTSTATUS    status;
+    unsigned int flags;
 
     TRACE("(%p %x %s %p %x %d %x %d %d %d %d %d %d %p)\n",
           handle, access, debugstr_w(attr->ObjectName->Buffer), iosb, sharing, dispo,
@@ -3054,6 +3055,10 @@ NTSTATUS WINAPI NtCreateNamedPipeFile( PHANDLE handle, ULONG access,
     if (timeout->QuadPart > 0)
         FIXME("Wrong time %s\n", wine_dbgstr_longlong(timeout->QuadPart));
 
+    flags = (pipe_type ? NAMED_PIPE_MESSAGE_STREAM_WRITE   : 0) |
+            (read_mode ? NAMED_PIPE_MESSAGE_STREAM_READ    : 0) |
+            (completion_mode ? NAMED_PIPE_NONBLOCKING_MODE : 0);
+
     SERVER_START_REQ( create_named_pipe )
     {
         req->access  = access;
@@ -3061,10 +3066,7 @@ NTSTATUS WINAPI NtCreateNamedPipeFile( PHANDLE handle, ULONG access,
         req->rootdir = wine_server_obj_handle( attr->RootDirectory );
         req->options = options;
         req->sharing = sharing;
-        req->flags = 
-            (pipe_type ? NAMED_PIPE_MESSAGE_STREAM_WRITE   : 0) |
-            (read_mode ? NAMED_PIPE_MESSAGE_STREAM_READ    : 0) |
-            (completion_mode ? NAMED_PIPE_NONBLOCKING_MODE : 0);
+        req->flags   = flags;
         req->maxinstances = max_inst;
         req->outsize = outbound_quota;
         req->insize  = inbound_quota;
@@ -3073,8 +3075,13 @@ NTSTATUS WINAPI NtCreateNamedPipeFile( PHANDLE handle, ULONG access,
                               attr->ObjectName->Length );
         status = wine_server_call( req );
         if (!status) *handle = wine_server_ptr_handle( reply->handle );
+        flags &= ~reply->flags; /* contains now all unsupported flags */
     }
     SERVER_END_REQ;
+
+    if (!status && (flags & (NAMED_PIPE_MESSAGE_STREAM_WRITE | NAMED_PIPE_MESSAGE_STREAM_READ)))
+        FIXME("Message mode not supported, falling back to byte mode.\n");
+
     return status;
 }
 
diff --git a/server/named_pipe.c b/server/named_pipe.c
index 0ec069d..70c028c 100644
--- a/server/named_pipe.c
+++ b/server/named_pipe.c
@@ -961,6 +961,7 @@ DECL_HANDLER(create_named_pipe)
         return;
     }
 
+    reply->flags = req->flags & ~(NAMED_PIPE_MESSAGE_STREAM_WRITE | NAMED_PIPE_MESSAGE_STREAM_READ);
     reply->handle = 0;
     get_req_unicode_str( &name );
     if (req->rootdir && !(root = get_directory_obj( current->process, req->rootdir, 0 )))
diff --git a/server/protocol.def b/server/protocol.def
index c9270ea..f0d7287 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -2285,6 +2285,7 @@ enum message_type
     unsigned int   flags;
     VARARG(name,unicode_str);    /* pipe name */
 @REPLY
+    unsigned int   flags;
     obj_handle_t   handle;       /* handle to the pipe */
 @END
 
-- 
1.7.9.5

