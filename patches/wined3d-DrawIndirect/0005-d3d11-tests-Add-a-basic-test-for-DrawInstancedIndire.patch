From 9cf4fd149607487343d264d1ae8b23807957a919 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Mon, 24 Jul 2017 20:36:31 +0200
Subject: d3d11/tests: Add a basic test for DrawInstancedIndirect.

---
 dlls/d3d11/tests/d3d11.c | 19 +++++++++++++++++--
 1 file changed, 17 insertions(+), 2 deletions(-)

diff --git a/dlls/d3d11/tests/d3d11.c b/dlls/d3d11/tests/d3d11.c
index c1b7dfff839..af71dbef770 100644
--- a/dlls/d3d11/tests/d3d11.c
+++ b/dlls/d3d11/tests/d3d11.c
@@ -9940,6 +9940,7 @@ static void test_clear_state(void)
 
 static void test_il_append_aligned(void)
 {
+    static const unsigned int params[] = {4, 4, 0, 0};
     struct d3d11_test_context test_context;
     ID3D11InputLayout *input_layout;
     ID3D11DeviceContext *context;
@@ -9947,6 +9948,7 @@ static void test_il_append_aligned(void)
     ID3D11VertexShader *vs;
     ID3D11PixelShader *ps;
     ID3D11Device *device;
+    ID3D11Buffer *buffer;
     ID3D11Buffer *vb[3];
     DWORD color;
     HRESULT hr;
@@ -10116,7 +10118,6 @@ static void test_il_append_aligned(void)
     ID3D11DeviceContext_PSSetShader(context, ps, NULL, 0);
 
     ID3D11DeviceContext_ClearRenderTargetView(context, test_context.backbuffer_rtv, red);
-
     ID3D11DeviceContext_DrawInstanced(context, 4, 4, 0, 0);
 
     color = get_texture_color(test_context.backbuffer,  80, 240);
@@ -10129,7 +10130,6 @@ static void test_il_append_aligned(void)
     ok(compare_color(color, 0xffff00ff, 1), "Got unexpected color 0x%08x.\n", color);
 
     ID3D11DeviceContext_ClearRenderTargetView(context, test_context.backbuffer_rtv, red);
-
     ID3D11DeviceContext_DrawInstanced(context, 4, 4, 0, 4);
 
     color = get_texture_color(test_context.backbuffer,  80, 240);
@@ -10141,6 +10141,21 @@ static void test_il_append_aligned(void)
     color = get_texture_color(test_context.backbuffer, 560, 240);
     ok(compare_color(color, 0xffff0000, 1), "Got unexpected color 0x%08x.\n", color);
 
+    buffer = create_buffer_misc(device, D3D11_BIND_UNORDERED_ACCESS,
+                D3D11_RESOURCE_MISC_DRAWINDIRECT_ARGS, sizeof(params), params);
+    ID3D11DeviceContext_ClearRenderTargetView(context, test_context.backbuffer_rtv, red);
+    ID3D11DeviceContext_DrawInstancedIndirect(context, buffer, 0);
+    ID3D11Buffer_Release(buffer);
+
+    color = get_texture_color(test_context.backbuffer,  80, 240);
+    ok(compare_color(color, 0xff0000ff, 1), "Got unexpected color 0x%08x.\n", color);
+    color = get_texture_color(test_context.backbuffer, 240, 240);
+    ok(compare_color(color, 0xff00ff00, 1), "Got unexpected color 0x%08x.\n", color);
+    color = get_texture_color(test_context.backbuffer, 400, 240);
+    ok(compare_color(color, 0xffff0000, 1), "Got unexpected color 0x%08x.\n", color);
+    color = get_texture_color(test_context.backbuffer, 560, 240);
+    ok(compare_color(color, 0xffff00ff, 1), "Got unexpected color 0x%08x.\n", color);
+
     ID3D11PixelShader_Release(ps);
     ID3D11VertexShader_Release(vs);
     ID3D11Buffer_Release(vb[2]);
-- 
2.13.1

