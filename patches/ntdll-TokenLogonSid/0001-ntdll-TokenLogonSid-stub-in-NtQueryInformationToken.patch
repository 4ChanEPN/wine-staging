From 691e58a26a95239493cadde8687b5870cccda501 Mon Sep 17 00:00:00 2001
From: Andrew Wesie <awesie@gmail.com>
Date: Wed, 3 May 2017 14:59:38 -0500
Subject: ntdll: TokenLogonSid stub in NtQueryInformationToken.

Signed-off-by: Andrew Wesie <awesie@gmail.com>
---
 dlls/advapi32/tests/security.c |  6 +++---
 dlls/ntdll/nt.c                | 28 +++++++++++++++++++++++++++-
 2 files changed, 30 insertions(+), 4 deletions(-)

diff --git a/dlls/advapi32/tests/security.c b/dlls/advapi32/tests/security.c
index d41e42e24fa..09f14f0d4eb 100644
--- a/dlls/advapi32/tests/security.c
+++ b/dlls/advapi32/tests/security.c
@@ -1841,11 +1841,11 @@ static void test_token_attr(void)
         todo_wine win_skip("TokenLogonSid not supported. Skipping tests\n");
     else
     {
-        todo_wine ok(!ret && (GetLastError() == ERROR_INSUFFICIENT_BUFFER),
+        ok(!ret && (GetLastError() == ERROR_INSUFFICIENT_BUFFER),
             "GetTokenInformation(TokenLogonSid) failed with error %d\n", GetLastError());
         Groups = HeapAlloc(GetProcessHeap(), 0, Size);
         ret = GetTokenInformation(Token, TokenLogonSid, Groups, Size, &Size);
-        todo_wine ok(ret,
+        ok(ret,
             "GetTokenInformation(TokenLogonSid) failed with error %d\n", GetLastError());
         if (ret)
         {
@@ -1858,7 +1858,7 @@ static void test_token_attr(void)
 
                 /* S-1-5-5-0-XXXXXX */
                 ret = IsWellKnownSid(Groups->Groups[0].Sid, WinLogonIdsSid);
-                ok(ret, "Unknown SID\n");
+                todo_wine ok(ret, "Unknown SID\n");
             }
         }
 
diff --git a/dlls/ntdll/nt.c b/dlls/ntdll/nt.c
index 8938d5d71c1..31b8bc75f29 100644
--- a/dlls/ntdll/nt.c
+++ b/dlls/ntdll/nt.c
@@ -254,6 +254,21 @@ NTSTATUS WINAPI NtQueryInformationToken(
 	ULONG tokeninfolength,
 	PULONG retlen )
 {
+    static const struct
+    {
+        /* same fields as struct _SID */
+        BYTE Revision;
+        BYTE SubAuthorityCount;
+        SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
+        DWORD SubAuthority[SECURITY_LOGON_IDS_RID_COUNT];
+    }
+    logon_sid =
+    {
+        SID_REVISION,
+        SECURITY_LOGON_IDS_RID_COUNT,
+        {SECURITY_NT_AUTHORITY},
+        {SECURITY_LOGON_IDS_RID, 0, 0}
+    };
     static const ULONG info_len [] =
     {
         0,
@@ -284,7 +299,7 @@ NTSTATUS WINAPI NtQueryInformationToken(
         sizeof(TOKEN_MANDATORY_LABEL) + sizeof(SID), /* TokenIntegrityLevel [sizeof(SID) includes one SubAuthority] */
         0,    /* TokenUIAccess */
         0,    /* TokenMandatoryPolicy */
-        0,    /* TokenLogonSid */
+        sizeof(TOKEN_GROUPS) + sizeof(logon_sid), /* TokenLogonSid */
         sizeof(DWORD), /* TokenIsAppContainer */
         0,    /* TokenCapabilities */
         sizeof(TOKEN_APPCONTAINER_INFORMATION) + sizeof(SID), /* TokenAppContainerSid */
@@ -552,6 +567,17 @@ NTSTATUS WINAPI NtQueryInformationToken(
             *(DWORD*)tokeninfo = 0;
             break;
         }
+    case TokenLogonSid:
+        {
+            TOKEN_GROUPS *groups = tokeninfo;
+            SID *sid = (SID *)(groups + 1);
+            FIXME("QueryInformationToken( ..., TokenLogonSid, ...) semi-stub\n");
+            groups->GroupCount = 1;
+            groups->Groups[0].Sid = sid;
+            groups->Groups[0].Attributes = 0;
+            memcpy(sid, &logon_sid, sizeof(logon_sid));
+        }
+        break;
     default:
         {
             ERR("Unhandled Token Information class %d!\n", tokeninfoclass);
-- 
2.14.1

