From 69c020763f71d57ada7d5670883b36add6444039 Mon Sep 17 00:00:00 2001
From: Sebastian Lackner <sebastian@fds-team.de>
Date: Sat, 6 May 2017 01:32:51 +0200
Subject: d3dx9_36/tests: Fix some test failures.

---
 dlls/d3dx9_36/tests/math.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/dlls/d3dx9_36/tests/math.c b/dlls/d3dx9_36/tests/math.c
index 3843abea9be..d21a229bbbe 100644
--- a/dlls/d3dx9_36/tests/math.c
+++ b/dlls/d3dx9_36/tests/math.c
@@ -232,7 +232,7 @@ static void D3DXColorTest(void)
 /*_______________D3DXColorLerp________________*/
     expected.r = 0.32f; expected.g = 0.69f; expected.b = 0.356f; expected.a = 0.897f;
     D3DXColorLerp(&got,&color,&color1,scale);
-    expect_color(&expected, &got, 0);
+    expect_color(&expected, &got, 2);
     /* Test the NULL case */
     funcpointer = D3DXColorLerp(&got,NULL,&color1,scale);
     ok(funcpointer == NULL, "Expected: %p, Got: %p\n", NULL, funcpointer);
@@ -302,7 +302,7 @@ static void D3DXFresnelTest(void)
     BOOL equal;
 
     fresnel = D3DXFresnelTerm(0.5f, 1.5f);
-    equal = compare_float(fresnel, 8.91867056e-02f, 1);
+    equal = compare_float(fresnel, 8.91867056e-02f, 2);
     ok(equal, "Got unexpected Fresnel term %.8e.\n", fresnel);
 }
 
@@ -2947,7 +2947,7 @@ static void test_D3DXSHEvalDirectionalLight(void)
                         expected = j + test[l].boffset;
                     else
                         expected = test[l].blue_out[startindex + j];
-                    equal = compare_float(expected, blue_out[j], 4);
+                    equal = compare_float(expected, blue_out[j], 8);
                     ok(equal, "Blue: case %u, order %u: expected[%u] = %.8e, received %.8e.\n",
                             l, order, j, expected, blue_out[j]);
                 }
@@ -3292,7 +3292,7 @@ static void test_D3DXSHMultiply3(void)
     D3DXSHMultiply3(c, c, b);
     for (i = 0; i < ARRAY_SIZE(expected_aliased); ++i)
     {
-        equal = compare_float(c[i], expected_aliased[i], 32);
+        equal = compare_float(c[i], expected_aliased[i], 64);
         ok(equal, "Expected[%u] = %.8e, received = %.8e.\n", i, expected_aliased[i], c[i]);
     }
 }
-- 
2.12.2

